#! /bin/sh
# Generated from testsuite.at by GNU Autoconf 2.69.
#
# Copyright (C) 2009-2012 Free Software Foundation, Inc.
#
# This test suite is free software; the Free Software Foundation gives
# unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :

else
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1
test -x / || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null; then :
  as_have_required=yes
else
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :

else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir/$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi; }
IFS=$as_save_IFS


      if test "x$CONFIG_SHELL" != x; then :
  export CONFIG_SHELL
             # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
$as_echo "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
fi

    if test x$as_have_required = xno; then :
  $as_echo "$0: This script requires a shell more modern than all"
  $as_echo "$0: the shells that I found on your system."
  if test x${ZSH_VERSION+set} = xset ; then
    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
  else
    $as_echo "$0: Please tell bug-autoconf@gnu.org about your system,
$0: including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p

# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have
  # already done that, so ensure we don't try to do so again and fall
  # in an infinite loop.  This has already happened in practice.
  _as_can_reexec=no; export _as_can_reexec
  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"





SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"


# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?  ':' means no, empty means yes.
at_verbose=:
at_quiet=
# Running several jobs in parallel, 0 means as many as test groups.
at_jobs=1
at_traceon=:
at_trace_echo=:
at_check_filter_trace=:

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# --clean
at_clean=false
# Test groups to run
at_groups=
# Whether to rerun failed tests.
at_recheck=
# Whether a write failure occurred
at_write_fail=0

# The directory we run the suite in.  Default to . if no -C option.
at_dir=`pwd`
# An absolute reference to this testsuite script.
case $as_myself in
  [\\/]* | ?:[\\/]* ) at_myself=$as_myself ;;
  * ) at_myself=$at_dir/$as_myself ;;
esac
# Whether -C is in effect.
at_change_dir=false

# Whether to enable colored test results.
at_color=auto
# List of the tested programs.
at_tested=''
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='???'
# Description of all the test groups.
at_help_all="1;testsuite.at:28;check for pocl version;;
2;testsuite.at:36;example1: dot product;tce;
3;testsuite.at:43;example1: dot product (SPIR64);spir;
4;testsuite.at:53;example1: dot product (SPIR32);spir;
5;testsuite.at:63;example2: matrix transpose;tce;
6;testsuite.at:69;example2a: matrix transpose (automatic locals);tce;
7;testsuite.at:77;Kernel functions convert_char*;short16;
8;testsuite.at:88;Kernel functions printf;printf;
9;testsuite.at:98;Kernel functions as_type;conversion;
10;testsuite.at:108;Kernel functions convert_type - scalars;conversion;
11;testsuite.at:117;Kernel functions convert_type - vector of 2;conversion;
12;testsuite.at:126;Kernel functions convert_type - vector of 4;conversion;
13;testsuite.at:135;Kernel functions convert_type - vector of 8;conversion;
14;testsuite.at:144;Kernel functions convert_type - vector of 16;conversion;
15;testsuite.at:155;Kernel functions min and max when the operands are of different sign;min_max;
16;testsuite.at:166;Kernel functions fmin, fmax, fma;fmin_fmax_fma;
17;testsuite.at:177;A saturating conversion from long to uint;convert_sat_regression;
18;testsuite.at:187;Kernel functions abs bitselect clz max min popcount;;
19;testsuite.at:198;Kernel functions fabs signbit isfinite isinf isnan isnormal copysign ilogb ldexp;;
20;testsuite.at:211;Kernel functions abs abs_diff add_sat hadd mad_hi mad_sat mul_hi rhadd sub_sat (loopvec);;
21;testsuite.at:225;Kernel functions abs abs_diff add_sat hadd mad_hi mad_sat mul_hi rhadd sub_sat (loops);;
22;testsuite.at:234;Kernel functions << >> rotate;rotate;
23;testsuite.at:252;Trigonometric functions;;
24;testsuite.at:259;Sampler address clamp;;
25;testsuite.at:267;Image query functions;;
26;testsuite.at:275;Kernel functions: shuffle charN;shuffle long;
27;testsuite.at:283;Kernel functions: shuffle shortN;shuffle long;
28;testsuite.at:291;Kernel functions: shuffle ushortN;shuffle long;
29;testsuite.at:299;Kernel functions: shuffle halfN;shuffle long;
30;testsuite.at:310;Kernel functions: shuffle intN;shuffle long;
31;testsuite.at:318;Kernel functions: shuffle uintN;shuffle long;
32;testsuite.at:326;Kernel functions: shuffle floatN;shuffle long;
33;testsuite.at:334;Kernel functions: shuffle longN;shuffle long;
34;testsuite.at:342;Kernel functions: shuffle ulongN;shuffle long;
35;testsuite.at:350;Kernel functions: shuffle doubleN;shuffle long;
36;testsuite.at:360;Scalar wave equation;scalarwave;
37;testsuite-workgroup.at:28;unconditional barriers (full replication);workgroup;
38;testsuite-workgroup.at:35;unconditional barriers (loops);workgroup;
39;testsuite-workgroup.at:42;unbarriered for loops (full replication);workgroup;
40;testsuite-workgroup.at:49;unbarriered for loops (loops);workgroup;
41;testsuite-workgroup.at:56;barriered for loops (full replication);workgroup;
42;testsuite-workgroup.at:63;barriered for loops (loops);workgroup;
43;testsuite-workgroup.at:70;conditional barrier (full replication);condbar workgroup;
44;testsuite-workgroup.at:77;conditional barrier (loops);condbar workgroup;
45;testsuite-workgroup.at:84;b-loop with none of the WIs reaching the barrier (full replication);b-loop workgroup;
46;testsuite-workgroup.at:91;b-loop with none of the WIs reaching the barrier (loops);b-loop workgroup;
47;testsuite-workgroup.at:98;forcing horizontal parallelization to some outer loops (repl);workgroup outerlooppar;
48;testsuite-workgroup.at:105;forcing horizontal parallelization to some outer loops (loops);workgroup outerlooppar;
49;testsuite-workgroup.at:112;different implicit barrier injection scenarios (loops);workgroup implicit;
50;testsuite-workgroup.at:119;loop with two paths to the latch (full replication);twolatchpaths workgroup;
51;testsuite-workgroup.at:126;loop with two paths to the latch (loops);twolatchpaths workgroup;
52;testsuite-workgroup.at:133;b-loop with two latches (full replication);twolatches workgroup;
53;testsuite-workgroup.at:140;b-loop with two latches (loops);twolatches workgroup;
54;testsuite-workgroup.at:147;workgroup_sizes: work-items get wrong ids (full replication);id workgroup;
55;testsuite-workgroup.at:155;workgroup_sizes: work-items get wrong ids (loop);id workgroup;
56;testsuite-regression.at:4;phi nodes not replicated (repl) - lp:927573;regression;
57;testsuite-regression.at:10;phi nodes not replicated (loops) - lp:927573;regression;
58;testsuite-regression.at:16;issues with local pointers (repl) - lp:918801;regression locals tce;
59;testsuite-regression.at:22;issues with local pointers (loops) - lp:918801;regression locals tce;
60;testsuite-regression.at:28;barrier between two for loops (repl);regression tce;
61;testsuite-regression.at:34;barrier between two for loops (loops);regression tce;
62;testsuite-regression.at:40;simple for-loop with a barrier inside (repl);regression;
63;testsuite-regression.at:46;simple for-loop with a barrier inside (loops);regression;
64;testsuite-regression.at:52;for-loop with computation after the brexit (repl) - lp:938123;regression tce;
65;testsuite-regression.at:58;for-loop with computation after the brexit (loops) - lp:938123;regression tce;
66;testsuite-regression.at:64;for-loop with a variable iteration count (repl) - lp:938883;regression;
67;testsuite-regression.at:70;for-loop with a variable iteration count (loops) - lp:938883;regression;
68;testsuite-regression.at:79;early return before a barrier region (repl) - lp:940248;regression early-return tce;
69;testsuite-regression.at:85;early return before a barrier region (loops) - lp:940248;regression early-return tce;
70;testsuite-regression.at:92;id-dependent computation before kernel exit (repl) - lp:940549;regression;
71;testsuite-regression.at:98;id-dependent computation before kernel exit (loops) - lp:940549;regression;
72;testsuite-regression.at:104;struct kernel arguments - lp:987905;regression struct;
73;testsuite-regression.at:113;vector kernel arguments - lp:987905;regression vectorarg;
74;testsuite-regression.at:127;barrier just before return (repl) - lp:1012030;regression struct;
75;testsuite-regression.at:133;barrier just before return (loops) - lp:1012030;regression struct;
76;testsuite-regression.at:139;infinite loop (repl) - lp:941558;regression infinite-loop tce;
77;testsuite-regression.at:146;infinite loop (loops) - lp:941558;regression infinite-loop tce;
78;testsuite-regression.at:153;passing a constant array as an arg - lp:1032203;regression const-array tce;
79;testsuite-regression.at:159;undominated variable from conditional barrier handling (repl) - lp:1045835;regression undominated;
80;testsuite-regression.at:165;undominated variable from conditional barrier handling (loops) - lp:1045835;regression undominated;
81;testsuite-regression.at:174;clSetKernelArg overwriting the previous kernel's args - lp:1075134;regression setkernelarg;
82;testsuite-regression.at:180;setting a buffer argument to NULL causes a segfault - lp:1109030;regression nullarg;
83;testsuite-regression.at:186;sizeof(uint);sizeof;
84;testsuite-regression.at:193;block;block;
85;testsuite-regression.at:203;case with multiple variable length loops and a barrier in one;regression varlengthloops;
86;testsuite-regression.at:209;assigning a loop iterator variable to a private makes it local - issue 94 (repl);regression looppriv;
87;testsuite-regression.at:218;assigning a loop iterator variable to a private makes it local - issue 94 (loops);regression looppriv;
88;testsuite-regression.at:227;assigning a loop iterator variable to a private makes it local 2 - issue 102 (repl);regression looppriv;
89;testsuite-regression.at:236;assigning a loop iterator variable to a private makes it local 2 - issue 102 (loops);regression looppriv;
90;testsuite-runtime.at:4;clGetDeviceInfo;runtime;
91;testsuite-runtime.at:9;clEnqueueNativeKernel;runtime;
92;testsuite-runtime.at:14;clGetEventInfo;runtime;
93;testsuite-runtime.at:19;clCreateProgramWithBinary;runtime;
94;testsuite-runtime.at:25;clBuildProgram;runtime;
95;testsuite-runtime.at:30;clFinish;runtime;
96;testsuite-runtime.at:36;clSetEventCallback;runtime;
97;testsuite-runtime.at:43;clGetSupportedImageFormats;runtime;
98;testsuite-runtime.at:48;clCreateKernelsInProgram;runtime;
99;testsuite-runtime.at:56;clCreateKernel;runtime;
100;testsuite-runtime.at:62;clGetKernelArgInfo;runtime;
101;testsuite-tce.at:4;A basic ttasim driver test;tce tta ttasim;
102;testsuite-tce.at:12;Half-precision floats on ttasim (repl);tce tta ttasim half;
103;testsuite-tce.at:37;Half-precision floats on ttasim (loopvec);tce tta ttasim half;
104;testsuite-tce.at:61;A basic TCEMC test;tce tta ttasim tcemc;
105;testsuite-samples.at:8;Building the sources against pocl;booksamples buildsamples;
106;testsuite-samples.at:28;Run Chapter 2: Hello World;booksamples helloworld;
107;testsuite-samples.at:38;Run Chapter 3: OpenCLConvolution;booksamples;
108;testsuite-samples.at:52;Run Chapter 6: HelloBinaryWorld;booksamples hellobinaryworld;
109;testsuite-samples.at:66;Run Chapter 7: SimpleBufferSubBuffer;booksamples simplebuffersubbuffer;
110;testsuite-samples.at:79;Run Chapter 8: ImageFilter2D;booksamples imagefilter2d;
111;testsuite-samples.at:102;Run Chapter 12: VectorAdd (C++ bindings);booksamples;
112;testsuite-viennacl.at:17;fft;viennacl fft;
113;testsuite-viennacl.at:21;custom-context;viennacl custom-context;
114;testsuite-viennacl.at:25;custom-kernels;viennacl custom-kernels;
115;testsuite-viennacl.at:29;scheduler;viennacl scheduler;
116;testsuite-viennacl.at:39;bandwidth-reduction;viennacl bandwidth-reduction long;
117;testsuite-viennacl.at:55;blas3_solve_double-test-opencl;viennacl blas3_solve_double-test-opencl long;
118;testsuite-viennacl.at:71;external_linkage-opencl;viennacl external_linkage-opencl;
119;testsuite-viennacl.at:92;global_variables-test-opencl;viennacl global_variables-test-opencl;
120;testsuite-viennacl.at:98;iterators-test-opencl;viennacl iterators-test-opencl;
121;testsuite-viennacl.at:106;matrix_col_double-test-opencl long;viennacl matrix_col_double-test-opencl long;
122;testsuite-viennacl.at:112;matrix_col_float-test-opencl long;viennacl matrix_col_float-test-opencl long;
123;testsuite-viennacl.at:118;matrix_col_int-test-opencl;viennacl matrix_col_int-test-opencl;
124;testsuite-viennacl.at:126;matrix_row_double-test-opencl long;viennacl matrix_row_double-test-opencl long;
125;testsuite-viennacl.at:132;matrix_row_float-test-opencl long;viennacl matrix_row_float-test-opencl long;
126;testsuite-viennacl.at:138;matrix_row_int-test-opencl;viennacl matrix_row_int-test-opencl;
127;testsuite-viennacl.at:146;matrix_vector_int-test-opencl;viennacl matrix_vector_int-test-opencl;
128;testsuite-viennacl.at:154;matrix_vector-test-opencl long;viennacl matrix_vector-test-opencl long;
129;testsuite-viennacl.at:158;nmf-test-opencl;viennacl nmf-test-opencl;
130;testsuite-viennacl.at:166;scalar-test-opencl;viennacl scalar-test-opencl;
131;testsuite-viennacl.at:170;structured-matrices-test-opencl;viennacl structured-matrices-test-opencl;
132;testsuite-viennacl.at:178;vector_double-test-opencl;viennacl vector_double-test-opencl;
133;testsuite-rodinia.at:19;backprop;rodinia backprop long;
134;testsuite-rodinia.at:31;bfs;rodinia bfs;
135;testsuite-rodinia.at:42;cfd;rodinia cfd long;
136;testsuite-rodinia.at:54;lud;rodinia lud;
137;testsuite-rodinia.at:61;hotspot;rodinia hotspot long;
138;testsuite-rodinia.at:69;kmeans;rodinia kmeans;
139;testsuite-rodinia.at:78;lavaMD;rodinia lavamd;
140;testsuite-rodinia.at:91;pathfinder;rodinia pathfinder;
141;testsuite-rodinia.at:102;srad;rodinia srad;
142;testsuite-parboil.at:17;spmv;parboil spmv;
143;testsuite-parboil.at:26;stencil;parboil stencil;
144;testsuite-parboil.at:33;tpacf;parboil tpacf;
145;testsuite-parboil.at:44;cutcp;parboil cutcp;
146;testsuite-parboil.at:51;mri-gridding;parboil mri-gridding long;
147;testsuite-parboil.at:63;sad;parboil sad;
148;testsuite-parboil.at:72;bfs;parboil bfs bfs-parboil long;
149;testsuite-parboil.at:84;histo;parboil histo;
150;testsuite-parboil.at:93;sgemm;parboil sgemm;
151;testsuite-parboil.at:100;mri-q;parboil mri-q;
152;testsuite-parboil.at:107;lbm;parboil lbm long;
153;testsuite-amd.at:11;aesencryptdecrypt-repl;amdsdk aesencryptdecrypt-repl long;
154;testsuite-amd.at:19;aesencryptdecrypt-loops;amdsdk aesencryptdecrypt-loops;
155;testsuite-amd.at:25;atomiccounters;amdsdk atomiccounters;
156;testsuite-amd.at:33;bitonicsort;amdsdk bitonicsort;
157;testsuite-amd.at:39;binarysearch;amdsdk binarysearch;
158;testsuite-amd.at:45;binomialoption-repl;amdsdk binomialoption-repl long;
159;testsuite-amd.at:53;binomialoption-loops;amdsdk binomialoption-loops;
160;testsuite-amd.at:59;blackscholes;amdsdk blackscholes;
161;testsuite-amd.at:65;blackscholesdp;amdsdk blackscholesdp cl_amd_fp64;
162;testsuite-amd.at:78;boxfilter;amdsdk boxfilter;
163;testsuite-amd.at:85;dct;amdsdk dct;
164;testsuite-amd.at:93;devicefission;amdsdk devicefission;
165;testsuite-amd.at:99;dwthaar1d;amdsdk dwthaar1d;
166;testsuite-amd.at:108;fastwalshtransform;amdsdk fastwalshtransform;
167;testsuite-amd.at:114;floydwarshall;amdsdk floydwarshall;
168;testsuite-amd.at:120;fluidsimulation2d;amdsdk fluidsimulation2d cl_amd_fp64;
169;testsuite-amd.at:131;helloworld;amdsdk helloworld;
170;testsuite-amd.at:138;histogram-repl;amdsdk histogram-repl long;
171;testsuite-amd.at:144;histogram-loops;amdsdk histogram-loops;
172;testsuite-amd.at:150;imageoverlap;amdsdk imageoverlap;
173;testsuite-amd.at:158;ludecomposition;amdsdk ludecomposition cl_amd_fp64;
174;testsuite-amd.at:170;mandelbrot;amdsdk mandelbrot;
175;testsuite-amd.at:178;matrixmul;amdsdk matrixmul;
176;testsuite-amd.at:186;matrixmulimage;amdsdk matrixmulimage;
177;testsuite-amd.at:192;matrixtranspose;amdsdk matrixtranspose;
178;testsuite-amd.at:198;memorymodel-repl;amdsdk memorymodel-repl long;
179;testsuite-amd.at:204;memorymodel-loops;amdsdk memorymodel-loops;
180;testsuite-amd.at:210;montecarloasian;amdsdk montecarloasian;
181;testsuite-amd.at:222;montecarloasiandp;amdsdk montecarloasiandp cl_amd_fp64;
182;testsuite-amd.at:232;nbody;amdsdk nbody;
183;testsuite-amd.at:239;prefixsum;amdsdk prefixsum;
184;testsuite-amd.at:245;quasirandomsequence;amdsdk quasirandomsequence;
185;testsuite-amd.at:251;radixsort;amdsdk radixsort;
186;testsuite-amd.at:257;recursivegaussian;amdsdk recursivegaussian;
187;testsuite-amd.at:263;reduction;amdsdk reduction;
188;testsuite-amd.at:269;scanlargearrays;amdsdk scanlargearrays;
189;testsuite-amd.at:276;simpleconvolution;amdsdk simpleconvolution;
190;testsuite-amd.at:282;simpleimage;amdsdk simpleimage;
191;testsuite-amd.at:289;sobelfilter;amdsdk sobelfilter;
192;testsuite-amd.at:295;template;amdsdk template;
193;testsuite-amd.at:301;templatec;amdsdk templatec;
194;testsuite-amd.at:307;transferoverlap;amdsdk transferoverlap;
195;testsuite-amd.at:315;urng;amdsdk urng;
196;testsuite-amdsdk2_9.at:11;asyncdatatransfer;amdsdk2.9 amdsdk long asyncdatatransfer;
197;testsuite-amdsdk2_9.at:20;atomiccounters;amdsdk2.9 amdsdk long atomiccounters;
198;testsuite-amdsdk2_9.at:28;basicdebug;amdsdk2.9 amdsdk long basicdebug;
199;testsuite-amdsdk2_9.at:40;binarysearch;amdsdk2.9 amdsdk long binarysearch;
200;testsuite-amdsdk2_9.at:46;binomialoption-repl;amdsdk2.9 amdsdk long binomialoption-repl;
201;testsuite-amdsdk2_9.at:54;binomialoption-loops;amdsdk2.9 amdsdk long binomialoption-loops;
202;testsuite-amdsdk2_9.at:60;binomialoptionmultigpu;amdsdk2.9 amdsdk long binomialoptionmultigpu;
203;testsuite-amdsdk2_9.at:67;bitonicsort;amdsdk2.9 amdsdk long bitonicsort;
204;testsuite-amdsdk2_9.at:73;blackscholes;amdsdk2.9 amdsdk long blackscholes;
205;testsuite-amdsdk2_9.at:79;blackscholesdp;amdsdk2.9 amdsdk long blackscholesdp cl_amd_fp64;
206;testsuite-amdsdk2_9.at:90;boxfilter;amdsdk2.9 amdsdk long boxfilter;
207;testsuite-amdsdk2_9.at:97;boxfilterGL;amdsdk2.9 amdsdk long boxfiltergl;
208;testsuite-amdsdk2_9.at:106;bufferbandwidth;amdsdk2.9 amdsdk long bufferbandwidth;
209;testsuite-amdsdk2_9.at:116;bufferImageInterop;amdsdk2.9 amdsdk long bufferimageinterop;
210;testsuite-amdsdk2_9.at:125;concurrentkernel;amdsdk2.9 amdsdk long concurrentkernel;
211;testsuite-amdsdk2_9.at:132;constantbandwidth;amdsdk2.9 amdsdk long constantbandwidth;
212;testsuite-amdsdk2_9.at:141;cpluspluswrapper;amdsdk2.9 amdsdk long cpluspluswrapper;
213;testsuite-amdsdk2_9.at:147;dct;amdsdk2.9 amdsdk long dct;
214;testsuite-amdsdk2_9.at:153;devicefission;amdsdk2.9 amdsdk long devicefission;
215;testsuite-amdsdk2_9.at:159;devicefission11ext;amdsdk2.9 amdsdk long devicefission11ext;
216;testsuite-amdsdk2_9.at:167;dwthaar1d;amdsdk2.9 amdsdk long dwthaar1d;
217;testsuite-amdsdk2_9.at:176;dwthaar1dcppkernel;amdsdk2.9 amdsdk long dwthaar1dcppkernel;
218;testsuite-amdsdk2_9.at:184;eigenvalue;amdsdk2.9 amdsdk long eigenvalue;
219;testsuite-amdsdk2_9.at:192;fastwalshtransform;amdsdk2.9 amdsdk long fastwalshtransform;
220;testsuite-amdsdk2_9.at:198;floydwarshall;amdsdk2.9 amdsdk long floydwarshall;
221;testsuite-amdsdk2_9.at:204;fft;amdsdk2.9 amdsdk long fft;
222;testsuite-amdsdk2_9.at:212;fluidsimulation2d;amdsdk2.9 amdsdk long fluidsimulation2d cl_amd_fp64;
223;testsuite-amdsdk2_9.at:223;gaussiannoise;amdsdk2.9 amdsdk long gaussiannoise;
224;testsuite-amdsdk2_9.at:229;gaussiannoisegl;amdsdk2.9 amdsdk long gaussiannoisegl;
225;testsuite-amdsdk2_9.at:244;hdrtonemapping;amdsdk2.9 amdsdk long hdrtonemapping;
226;testsuite-amdsdk2_9.at:250;helloworld;amdsdk2.9 amdsdk long helloworld;
227;testsuite-amdsdk2_9.at:257;histogram-repl;amdsdk2.9 amdsdk long histogram-repl;
228;testsuite-amdsdk2_9.at:263;histogram-loops;amdsdk2.9 amdsdk long histogram-loops;
229;testsuite-amdsdk2_9.at:269;histogramatomic;amdsdk2.9 amdsdk long histogramatomic;
230;testsuite-amdsdk2_9.at:275;imagebandwidth;amdsdk2.9 amdsdk long imagebandwidth;
231;testsuite-amdsdk2_9.at:283;imageoverlap;amdsdk2.9 amdsdk long imageoverlap;
232;testsuite-amdsdk2_9.at:289;introstatickcppkernel;amdsdk2.9 amdsdk long introstatickcppkernel;
233;testsuite-amdsdk2_9.at:297;kernellauch;amdsdk2.9 amdsdk long kernellauch;
234;testsuite-amdsdk2_9.at:305;kmeansautoclustering;amdsdk2.9 amdsdk long kmeansautoclustering;
235;testsuite-amdsdk2_9.at:314;ldsbandwidth;amdsdk2.9 amdsdk long ldsbandwidth;
236;testsuite-amdsdk2_9.at:322;ludecomposition;amdsdk2.9 amdsdk long ludecomposition cl_amd_fp64;
237;testsuite-amdsdk2_9.at:332;mandelbrot;amdsdk2.9 amdsdk long mandelbrot;
238;testsuite-amdsdk2_9.at:341;matrixmuldouble;amdsdk2.9 amdsdk long matrixmuldouble;
239;testsuite-amdsdk2_9.at:347;matrixmulimage;amdsdk2.9 amdsdk long matrixmulimage;
240;testsuite-amdsdk2_9.at:353;matrixmultiplication;amdsdk2.9 amdsdk long matrixmultiplication;
241;testsuite-amdsdk2_9.at:361;matrixtranspose;amdsdk2.9 amdsdk long matrixtranspose;
242;testsuite-amdsdk2_9.at:367;memorymodel-repl;amdsdk2.9 amdsdk long memorymodel-repl;
243;testsuite-amdsdk2_9.at:373;memorymodel-loops;amdsdk2.9 amdsdk long memorymodel-loops;
244;testsuite-amdsdk2_9.at:379;memoryoptimizations;amdsdk2.9 amdsdk long memoryoptimizations;
245;testsuite-amdsdk2_9.at:409;merzennetwister;amdsdk2.9 amdsdk long merzennetwister;
246;testsuite-amdsdk2_9.at:417;montecarloasian;amdsdk2.9 amdsdk long montecarloasian;
247;testsuite-amdsdk2_9.at:427;montecarloasiandp;amdsdk2.9 amdsdk long montecarloasiandp cl_amd_fp64;
248;testsuite-amdsdk2_9.at:437;montecarloasianmultigpu;amdsdk2.9 amdsdk long montecarloasianmultigpu;
249;testsuite-amdsdk2_9.at:447;nbody;amdsdk2.9 amdsdk long nbody;
250;testsuite-amdsdk2_9.at:455;prefixsum;amdsdk2.9 amdsdk long prefixsum;
251;testsuite-amdsdk2_9.at:461;quasirandomsequence;amdsdk2.9 amdsdk long quasirandomsequence;
252;testsuite-amdsdk2_9.at:467;radixsort;amdsdk2.9 amdsdk long radixsort;
253;testsuite-amdsdk2_9.at:473;recursivegaussian;amdsdk2.9 amdsdk long recursivegaussian;
254;testsuite-amdsdk2_9.at:479;reduction;amdsdk2.9 amdsdk long reduction;
255;testsuite-amdsdk2_9.at:485;scanlargearrays;amdsdk2.9 amdsdk long scanlargearrays;
256;testsuite-amdsdk2_9.at:492;simpleconvolution;amdsdk2.9 amdsdk long simpleconvolution;
257;testsuite-amdsdk2_9.at:498;simplegl;amdsdk2.9 amdsdk long simplegl;
258;testsuite-amdsdk2_9.at:506;simpleimage;amdsdk2.9 amdsdk long simpleimage;
259;testsuite-amdsdk2_9.at:513;soaversusaos;amdsdk2.9 amdsdk long soaversusaos;
260;testsuite-amdsdk2_9.at:522;sobelfilter;amdsdk2.9 amdsdk long sobelfilter;
261;testsuite-amdsdk2_9.at:528;sobelfilterimage;amdsdk2.9 amdsdk long sobelfilterimage;
262;testsuite-amdsdk2_9.at:536;stringsearch;amdsdk2.9 amdsdk long stringsearch;
263;testsuite-amdsdk2_9.at:543;template;amdsdk2.9 amdsdk long template;
264;testsuite-amdsdk2_9.at:549;transferoverlap;amdsdk2.9 amdsdk long transferoverlap;
265;testsuite-amdsdk2_9.at:555;transferoverlapcpp;amdsdk2.9 amdsdk long transferoverlapcpp;
266;testsuite-amdsdk2_9.at:563;unsharpmask;amdsdk2.9 amdsdk long unsharpmask;
267;testsuite-amdsdk2_9.at:571;urng;amdsdk2.9 amdsdk long urng;
268;testsuite-amdsdk2_9.at:577;urngnoisegl;amdsdk2.9 amdsdk long urngnoisegl;
269;testsuite-vexcl.at:10;fft;vexcl fft;
270;testsuite-vexcl.at:19;generator;vexcl generator;
271;testsuite-vexcl.at:25;multiple_objects;vexcl multiple_objects;
272;testsuite-vexcl.at:31;multivector_arithmetics;vexcl multivector_arithmetics;
273;testsuite-vexcl.at:37;multivector_create;vexcl multivector_create;
274;testsuite-vexcl.at:43;random;vexcl random;
275;testsuite-vexcl.at:49;spmv;vexcl spmv;
276;testsuite-vexcl.at:55;stencil;vexcl stencil;
277;testsuite-vexcl.at:63;vector_arithmetics;vexcl vector_arithmetics;
278;testsuite-vexcl.at:69;vector_copy;vexcl vector_copy;
279;testsuite-vexcl.at:75;vector_create;vexcl vector_create;
280;testsuite-halide.at:11;tutorial12;halide tutorial12;
281;testsuite-halide.at:21;bilateral_grid;halide bilateral_grid;
282;testsuite-halide.at:26;interpolate;halide interpolate;
283;testsuite-halide.at:31;local_laplacian;halide local_laplacian;
284;testsuite-cloverleaf.at:11;cloverleaf;cloverleaf;
285;testsuite-piglit.at:3;Piglit testsuite with LLVM 3.4;piglit long;
286;testsuite-piglit.at:12;Piglit testsuite with LLVM 3.5;piglit long;
"
# List of the all the test groups.
at_groups_all=`$as_echo "$at_help_all" | sed 's/;.*//'`

# at_fn_validate_ranges NAME...
# -----------------------------
# Validate and normalize the test group number contained in each variable
# NAME. Leading zeroes are treated as decimal.
at_fn_validate_ranges ()
{
  for at_grp
  do
    eval at_value=\$$at_grp
    if test $at_value -lt 1 || test $at_value -gt 286; then
      $as_echo "invalid test group: $at_value" >&2
      exit 1
    fi
    case $at_value in
      0*) # We want to treat leading 0 as decimal, like expr and test, but
	  # AS_VAR_ARITH treats it as octal if it uses $(( )).
	  # With XSI shells, ${at_value#${at_value%%[1-9]*}} avoids the
	  # expr fork, but it is not worth the effort to determine if the
	  # shell supports XSI when the user can just avoid leading 0.
	  eval $at_grp='`expr $at_value + 0`' ;;
    esac
  done
}

at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=?*) at_optarg=`expr "X$at_option" : '[^=]*=\(.*\)'` ;;
  *)    at_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	at_clean=:
	;;

    --color )
	at_color=always
	;;
    --color=* )
	case $at_optarg in
	no | never | none) at_color=never ;;
	auto | tty | if-tty) at_color=auto ;;
	always | yes | force) at_color=always ;;
	*) at_optname=`echo " $at_option" | sed 's/^ //; s/=.*//'`
	   as_fn_error $? "unrecognized argument to $at_optname: $at_optarg" ;;
	esac
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'
	at_trace_echo=echo
	at_check_filter_trace=at_fn_filter_trace
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_fn_validate_ranges at_option
	as_fn_append at_groups "$at_option$as_nl"
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_start
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,$p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '1,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_fn_validate_ranges at_range_start at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    # Directory selection.
    --directory | -C )
	at_prev=--directory
	;;
    --directory=* )
	at_change_dir=:
	at_dir=$at_optarg
	if test x- = "x$at_dir" ; then
	  at_dir=./-
	fi
	;;

    # Parallel execution.
    --jobs | -j )
	at_jobs=0
	;;
    --jobs=* | -j[0-9]* )
	if test -n "$at_optarg"; then
	  at_jobs=$at_optarg
	else
	  at_jobs=`expr X$at_option : 'X-j\(.*\)'`
	fi
	case $at_jobs in *[!0-9]*)
	  at_optname=`echo " $at_option" | sed 's/^ //; s/[0-9=].*//'`
	  as_fn_error $? "non-numeric argument to $at_optname: $at_jobs" ;;
	esac
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`$as_echo "$at_groups_selected" |
	      grep -i $at_invert "^[1-9][^;]*;.*[; ]$at_keyword[ ;]"`
	done
	# Smash the keywords.
	at_groups_selected=`$as_echo "$at_groups_selected" | sed 's/;.*//'`
	as_fn_append at_groups "$at_groups_selected$as_nl"
	;;
    --recheck)
	at_recheck=:
	;;

    *=*)
	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
	# Reject names that are not valid shell variable names.
	case $at_envvar in
	  '' | [0-9]* | *[!_$as_cr_alnum]* )
	    as_fn_error $? "invalid variable name: \`$at_envvar'" ;;
	esac
	at_value=`$as_echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	# Export now, but save eval for later and for debug scripts.
	export $at_envvar
	as_fn_append at_debug_args " $at_envvar='$at_value'"
	;;

     *) $as_echo "$as_me: invalid option: $at_option" >&2
	$as_echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Verify our last option didn't require an argument
if test -n "$at_prev"; then :
  as_fn_error $? "\`$at_prev' requires an argument"
fi

# The file containing the suite.
at_suite_log=$at_dir/$as_me.log

# Selected test groups.
if test -z "$at_groups$at_recheck"; then
  at_groups=$at_groups_all
else
  if test -n "$at_recheck" && test -r "$at_suite_log"; then
    at_oldfails=`sed -n '
      /^Failed tests:$/,/^Skipped tests:$/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^Unexpected passes:$/,/^## Detailed failed tests/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^## Detailed failed tests/q
      ' "$at_suite_log"`
    as_fn_append at_groups "$at_oldfails$as_nl"
  fi
  # Sort the tests, removing duplicates.
  at_groups=`$as_echo "$at_groups" | sort -nu | sed '/^$/d'`
fi

if test x"$at_color" = xalways \
   || { test x"$at_color" = xauto && test -t 1; }; then
  at_red=`printf '\033[0;31m'`
  at_grn=`printf '\033[0;32m'`
  at_lgn=`printf '\033[1;32m'`
  at_blu=`printf '\033[1;34m'`
  at_std=`printf '\033[m'`
else
  at_red= at_grn= at_lgn= at_blu= at_std=
fi

# Help message.
if $at_help_p; then
  cat <<_ATEOF || at_write_fail=1
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

Do not change environment variables directly.  Instead, set them via
command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relative to the top level of this distribution.
E.g., from within the build directory /tmp/foo-1.0, invoking this:

  $ $0 AUTOTEST_PATH=bin

is equivalent to the following, assuming the source directory is /src/foo-1.0:

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH $0
_ATEOF
cat <<_ATEOF || at_write_fail=1

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF || at_write_fail=1

Execution tuning:
  -C, --directory=DIR
                 change to directory DIR before starting
      --color[=never|auto|always]
                 disable colored test results, or enable even without terminal
  -j, --jobs[=N]
                 Allow N jobs at once; infinite jobs with no arg (default 1)
  -k, --keywords=KEYWORDS
                 select the tests matching all the comma-separated KEYWORDS
                 multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
      --recheck  select all tests that failed or passed unexpectedly last time
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
                 default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
                 default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF || at_write_fail=1

Report bugs to <pocl-devel@lists.sourceforge.net>.
_ATEOF
  exit $at_write_fail
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF || at_write_fail=1
pocl 0.11 test suite test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Pass an empty line as separator between selected groups and help.
  $as_echo "$at_groups$as_nl$as_nl$at_help_all" |
    awk 'NF == 1 && FS != ";" {
	   selected[$ 1] = 1
	   next
	 }
	 /^$/ { FS = ";" }
	 NF > 0 {
	   if (selected[$ 1]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) {
	       lmax = 79
	       indent = "     "
	       line = indent
	       len = length (line)
	       n = split ($ 4, a, " ")
	       for (i = 1; i <= n; i++) {
		 l = length (a[i]) + 1
		 if (i > 1 && len + l > lmax) {
		   print line
		   line = indent " " a[i]
		   len = length (line)
		 } else {
		   line = line " " a[i]
		   len += l
		 }
	       }
	       if (n)
		 print line
	     }
	   }
	 }' || at_write_fail=1
  exit $at_write_fail
fi
if $at_version_p; then
  $as_echo "$as_me (pocl 0.11)" &&
  cat <<\_ATEOF || at_write_fail=1

Copyright (C) 2012 Free Software Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.
_ATEOF
  exit $at_write_fail
fi

# Should we print banners?  Yes if more than one test is run.
case $at_groups in #(
  *$as_nl* )
      at_print_banners=: ;; #(
  * ) at_print_banners=false ;;
esac
# Text for banner N, set to a single space once printed.
# Banner 1. testsuite.at:34
# Category starts at test group 2.
at_banner_text_1="OpenCL specification tests"
# Banner 2. testsuite.at:75
# Category starts at test group 7.
at_banner_text_2="Kernel runtime library"
# Banner 3. testsuite.at:358
# Category starts at test group 36.
at_banner_text_3="Full applications"
# Banner 4. testsuite-workgroup.at:26
# Category starts at test group 37.
at_banner_text_4="Workgroup creation tests"
# Banner 5. testsuite-regression.at:2
# Category starts at test group 56.
at_banner_text_5="Regression tests"
# Banner 6. testsuite-runtime.at:2
# Category starts at test group 90.
at_banner_text_6="Runtime library tests"
# Banner 7. testsuite-tce.at:2
# Category starts at test group 101.
at_banner_text_7="TCE tests"
# Banner 8. testsuite-samples.at:6
# Category starts at test group 105.
at_banner_text_8="OpenCL Programming Guide Samples"
# Banner 9. testsuite-viennacl.at:15
# Category starts at test group 112.
at_banner_text_9="ViennaCL 1.5.1 tests"
# Banner 10. testsuite-rodinia.at:17
# Category starts at test group 133.
at_banner_text_10="Rodinia 2.0.1 tests"
# Banner 11. testsuite-parboil.at:15
# Category starts at test group 142.
at_banner_text_11="Parboil tests"
# Banner 12. testsuite-amd.at:9
# Category starts at test group 153.
at_banner_text_12="AMD APP SDK tests"
# Banner 13. testsuite-amdsdk2_9.at:9
# Category starts at test group 196.
at_banner_text_13="AMD APP SDK 2.9 tests"
# Banner 14. testsuite-vexcl.at:8
# Category starts at test group 269.
at_banner_text_14="VexCL tests"
# Banner 15. testsuite-halide.at:9
# Category starts at test group 280.
at_banner_text_15="Halide OpenCL examples"
# Banner 16. testsuite-cloverleaf.at:9
# Category starts at test group 284.
at_banner_text_16="CloverLeaf"
# Banner 17. testsuite-piglit.at:1
# Category starts at test group 285.
at_banner_text_17="Piglit OpenCL tests"

# Take any -C into account.
if $at_change_dir ; then
  test x != "x$at_dir" && cd "$at_dir" \
    || as_fn_error $? "unable to change directory"
  at_dir=`pwd`
fi

# Load the config files for any default variable assignments.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || as_fn_error $? "invalid content: $at_file"
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: "${at_top_build_prefix=$at_top_builddir}"

# Perform any assignments requested during argument parsing.
eval "$at_debug_args"

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir_var in srcdir top_srcdir top_build_prefix
  do
    eval at_val=\$at_$at_dir_var
    case $at_val in
      [\\/$]* | ?:[\\/]* ) at_prefix= ;;
      *) at_prefix=../../ ;;
    esac
    eval "$at_dir_var=\$at_prefix\$at_val"
  done
fi

## -------------------- ##
## Directory structure. ##
## -------------------- ##

# This is the set of directories and files used by this script
# (non-literals are capitalized):
#
# TESTSUITE         - the testsuite
# TESTSUITE.log     - summarizes the complete testsuite run
# TESTSUITE.dir/    - created during a run, remains after -d or failed test
# + at-groups/      - during a run: status of all groups in run
# | + NNN/          - during a run: meta-data about test group NNN
# | | + check-line  - location (source file and line) of current AT_CHECK
# | | + status      - exit status of current AT_CHECK
# | | + stdout      - stdout of current AT_CHECK
# | | + stder1      - stderr, including trace
# | | + stderr      - stderr, with trace filtered out
# | | + test-source - portion of testsuite that defines group
# | | + times       - timestamps for computing duration
# | | + pass        - created if group passed
# | | + xpass       - created if group xpassed
# | | + fail        - created if group failed
# | | + xfail       - created if group xfailed
# | | + skip        - created if group skipped
# + at-stop         - during a run: end the run if this file exists
# + at-source-lines - during a run: cache of TESTSUITE line numbers for extraction
# + 0..NNN/         - created for each group NNN, remains after -d or failed test
# | + TESTSUITE.log - summarizes the group results
# | + ...           - files created during the group

# The directory the whole suite works in.
# Should be absolute to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite ($at_dir might have changed since earlier).
at_suite_log=$at_dir/$as_me.log
# The directory containing helper files per test group.
at_helper_dir=$at_suite_dir/at-groups
# Stop file: if it exists, do not start new jobs.
at_stop_file=$at_suite_dir/at-stop
# The fifo used for the job dispatcher.
at_job_fifo=$at_suite_dir/at-job-fifo

if $at_clean; then
  test -d "$at_suite_dir" &&
    find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
  rm -f -r "$at_suite_dir" "$at_suite_log"
  exit $?
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites (ie. atconfig was not found),
# AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`$as_echo "$AUTOTEST_PATH" | sed "s|:|$PATH_SEPARATOR|g"`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -n "$at_path" && as_fn_append at_path $PATH_SEPARATOR
case $as_dir in
  [\\/]* | ?:[\\/]* )
    as_fn_append at_path "$as_dir"
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      as_fn_append at_path "$as_dir"
    else
      # Embedded test suite.
      as_fn_append at_path "$at_top_build_prefix$as_dir$PATH_SEPARATOR"
      as_fn_append at_path "$at_top_srcdir/$as_dir"
    fi
    ;;
esac
  done
IFS=$as_save_IFS


# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
at_new_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -d "$as_dir" || continue
case $as_dir in
  [\\/]* | ?:[\\/]* ) ;;
  * ) as_dir=`(cd "$as_dir" && pwd) 2>/dev/null` ;;
esac
case $PATH_SEPARATOR$at_new_path$PATH_SEPARATOR in
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR*) ;;
  $PATH_SEPARATOR$PATH_SEPARATOR) at_new_path=$as_dir ;;
  *) as_fn_append at_new_path "$PATH_SEPARATOR$as_dir" ;;
esac
  done
IFS=$as_save_IFS

PATH=$at_new_path
export PATH

# Setting up the FDs.



# 5 is the log file.  Not to be overwritten if `-d'.
if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec 5>>"$at_suite_log"

# Banners and logs.
$as_echo "## --------------------- ##
## pocl 0.11 test suite. ##
## --------------------- ##"
{
  $as_echo "## --------------------- ##
## pocl 0.11 test suite. ##
## --------------------- ##"
  echo

  $as_echo "$as_me: command line was:"
  $as_echo "  \$ $0 $at_cli_args"
  echo

  # If ChangeLog exists, list a few lines in case it might help determining
  # the exact version.
  if test -n "$at_top_srcdir" && test -f "$at_top_srcdir/ChangeLog"; then
    $as_echo "## ---------- ##
## ChangeLog. ##
## ---------- ##"
    echo
    sed 's/^/| /;10q' "$at_top_srcdir/ChangeLog"
    echo
  fi

  {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    $as_echo "PATH: $as_dir"
  done
IFS=$as_save_IFS

}
  echo

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    $as_echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done
} >&5


## ------------------------- ##
## Autotest shell functions. ##
## ------------------------- ##

# at_fn_banner NUMBER
# -------------------
# Output banner NUMBER, provided the testsuite is running multiple groups and
# this particular banner has not yet been printed.
at_fn_banner ()
{
  $at_print_banners || return 0
  eval at_banner_text=\$at_banner_text_$1
  test "x$at_banner_text" = "x " && return 0
  eval "at_banner_text_$1=\" \""
  if test -z "$at_banner_text"; then
    $at_first || echo
  else
    $as_echo "$as_nl$at_banner_text$as_nl"
  fi
} # at_fn_banner

# at_fn_check_prepare_notrace REASON LINE
# ---------------------------------------
# Perform AT_CHECK preparations for the command at LINE for an untraceable
# command; REASON is the reason for disabling tracing.
at_fn_check_prepare_notrace ()
{
  $at_trace_echo "Not enabling shell tracing (command contains $1)"
  $as_echo "$2" >"$at_check_line_file"
  at_check_trace=: at_check_filter=:
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_trace LINE
# ------------------------------
# Perform AT_CHECK preparations for the command at LINE for a traceable
# command.
at_fn_check_prepare_trace ()
{
  $as_echo "$1" >"$at_check_line_file"
  at_check_trace=$at_traceon at_check_filter=$at_check_filter_trace
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_dynamic COMMAND LINE
# ----------------------------------------
# Decide if COMMAND at LINE is traceable at runtime, and call the appropriate
# preparation function.
at_fn_check_prepare_dynamic ()
{
  case $1 in
    *$as_nl*)
      at_fn_check_prepare_notrace 'an embedded newline' "$2" ;;
    *)
      at_fn_check_prepare_trace "$2" ;;
  esac
}

# at_fn_filter_trace
# ------------------
# Remove the lines in the file "$at_stderr" generated by "set -x" and print
# them to stderr.
at_fn_filter_trace ()
{
  mv "$at_stderr" "$at_stder1"
  grep '^ *+' "$at_stder1" >&2
  grep -v '^ *+' "$at_stder1" >"$at_stderr"
}

# at_fn_log_failure FILE-LIST
# ---------------------------
# Copy the files in the list on stdout with a "> " prefix, and exit the shell
# with a failure exit code.
at_fn_log_failure ()
{
  for file
    do $as_echo "$file:"; sed 's/^/> /' "$file"; done
  echo 1 > "$at_status_file"
  exit 1
}

# at_fn_check_skip EXIT-CODE LINE
# -------------------------------
# Check whether EXIT-CODE is a special exit code (77 or 99), and if so exit
# the test group subshell with that same exit code. Use LINE in any report
# about test failure.
at_fn_check_skip ()
{
  case $1 in
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$2: hard failure"; exit 99;;
    77) echo 77 > "$at_status_file"; exit 77;;
  esac
}

# at_fn_check_status EXPECTED EXIT-CODE LINE
# ------------------------------------------
# Check whether EXIT-CODE is the EXPECTED exit code, and if so do nothing.
# Otherwise, if it is 77 or 99, exit the test group subshell with that same
# exit code; if it is anything else print an error message referring to LINE,
# and fail the test.
at_fn_check_status ()
{
  case $2 in
    $1 ) ;;
    77) echo 77 > "$at_status_file"; exit 77;;
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$3: hard failure"; exit 99;;
    *) $as_echo "$3: exit code was $2, expected $1"
      at_failed=:;;
  esac
}

# at_fn_diff_devnull FILE
# -----------------------
# Emit a diff between /dev/null and FILE. Uses "test -s" to avoid useless diff
# invocations.
at_fn_diff_devnull ()
{
  test -s "$1" || return 0
  $at_diff "$at_devnull" "$1"
}

# at_fn_test NUMBER
# -----------------
# Parse out test NUMBER from the tail of this file.
at_fn_test ()
{
  eval at_sed=\$at_sed$1
  sed "$at_sed" "$at_myself" > "$at_test_source"
}

# at_fn_create_debugging_script
# -----------------------------
# Create the debugging script $at_group_dir/run which will reproduce the
# current test group.
at_fn_create_debugging_script ()
{
  {
    echo "#! /bin/sh" &&
    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\''' &&
    $as_echo "cd '$at_dir'" &&
    $as_echo "exec \${CONFIG_SHELL-$SHELL} \"$at_myself\" -v -d $at_debug_args $at_group \${1+\"\$@\"}" &&
    echo 'exit 1'
  } >"$at_group_dir/run" &&
  chmod +x "$at_group_dir/run"
}

## -------------------------------- ##
## End of autotest shell functions. ##
## -------------------------------- ##
{
  $as_echo "## ---------------- ##
## Tested programs. ##
## ---------------- ##"
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  case $at_program in
    [\\/]* | ?:[\\/]* ) $at_program_=$at_program ;;
    * )
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -f "$as_dir/$at_program" && break
  done
IFS=$as_save_IFS

    at_program_=$as_dir/$at_program ;;
  esac
  if test -f "$at_program_"; then
    {
      $as_echo "$at_srcdir/testsuite.at:25: $at_program_ --version"
      "$at_program_" --version </dev/null
      echo
    } >&5 2>&1
  else
    as_fn_error $? "cannot find $at_program" "$LINENO" 5
  fi
done

{
  $as_echo "## ------------------ ##
## Running the tests. ##
## ------------------ ##"
} >&5

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
$as_echo "$as_me: starting at: $at_start_date" >&5

# Create the master directory if it doesn't already exist.
as_dir="$at_suite_dir"; as_fn_mkdir_p ||
  as_fn_error $? "cannot create \`$at_suite_dir'" "$LINENO" 5

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi

# Get the last needed group.
for at_group in : $at_groups; do :; done

# Extract the start and end lines of each test group at the tail
# of this file
awk '
BEGIN { FS="" }
/^#AT_START_/ {
  start = NR
}
/^#AT_STOP_/ {
  test = substr ($ 0, 10)
  print "at_sed" test "=\"1," start "d;" (NR-1) "q\""
  if (test == "'"$at_group"'") exit
}' "$at_myself" > "$at_suite_dir/at-source-lines" &&
. "$at_suite_dir/at-source-lines" ||
  as_fn_error $? "cannot create test line number cache" "$LINENO" 5
rm -f "$at_suite_dir/at-source-lines"

# Set number of jobs for `-j'; avoid more jobs than test groups.
set X $at_groups; shift; at_max_jobs=$#
if test $at_max_jobs -eq 0; then
  at_jobs=1
fi
if test $at_jobs -ne 1 &&
   { test $at_jobs -eq 0 || test $at_jobs -gt $at_max_jobs; }; then
  at_jobs=$at_max_jobs
fi

# If parallel mode, don't output banners, don't split summary lines.
if test $at_jobs -ne 1; then
  at_print_banners=false
  at_quiet=:
fi

# Set up helper dirs.
rm -rf "$at_helper_dir" &&
mkdir "$at_helper_dir" &&
cd "$at_helper_dir" &&
{ test -z "$at_groups" || mkdir $at_groups; } ||
as_fn_error $? "testsuite directory setup failed" "$LINENO" 5

# Functions for running a test group.  We leave the actual
# test group execution outside of a shell function in order
# to avoid hitting zsh 4.x exit status bugs.

# at_fn_group_prepare
# -------------------
# Prepare for running a test group.
at_fn_group_prepare ()
{
  # The directory for additional per-group helper files.
  at_job_dir=$at_helper_dir/$at_group
  # The file containing the location of the last AT_CHECK.
  at_check_line_file=$at_job_dir/check-line
  # The file containing the exit status of the last command.
  at_status_file=$at_job_dir/status
  # The files containing the output of the tested commands.
  at_stdout=$at_job_dir/stdout
  at_stder1=$at_job_dir/stder1
  at_stderr=$at_job_dir/stderr
  # The file containing the code for a test group.
  at_test_source=$at_job_dir/test-source
  # The file containing dates.
  at_times_file=$at_job_dir/times

  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  # Clearly separate the test groups when verbose.
  $at_first || $at_verbose echo

  at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'


  # Create a fresh directory for the next test group, and enter.
  # If one already exists, the user may have invoked ./run from
  # within that directory; we remove the contents, but not the
  # directory itself, so that we aren't pulling the rug out from
  # under the shell's notion of the current directory.
  at_group_dir=$at_suite_dir/$at_group_normalized
  at_group_log=$at_group_dir/$as_me.log
  if test -d "$at_group_dir"; then
  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx {} \;
  rm -fr "$at_group_dir"/* "$at_group_dir"/.[!.] "$at_group_dir"/.??*
fi ||
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: test directory for $at_group_normalized could not be cleaned" >&5
$as_echo "$as_me: WARNING: test directory for $at_group_normalized could not be cleaned" >&2;}
  # Be tolerant if the above `rm' was not able to remove the directory.
  as_dir="$at_group_dir"; as_fn_mkdir_p

  echo 0 > "$at_status_file"

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log.
  if test -z "$at_verbose"; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi
}

# at_fn_group_banner ORDINAL LINE DESC PAD [BANNER]
# -------------------------------------------------
# Declare the test group ORDINAL, located at LINE with group description DESC,
# and residing under BANNER. Use PAD to align the status column.
at_fn_group_banner ()
{
  at_setup_line="$2"
  test -n "$5" && at_fn_banner $5
  at_desc="$3"
  case $1 in
    [0-9])      at_desc_line="  $1: ";;
    [0-9][0-9]) at_desc_line=" $1: " ;;
    *)          at_desc_line="$1: "  ;;
  esac
  as_fn_append at_desc_line "$3$4"
  $at_quiet $as_echo_n "$at_desc_line"
  echo "#                             -*- compilation -*-" >> "$at_group_log"
}

# at_fn_group_postprocess
# -----------------------
# Perform cleanup after running a test group.
at_fn_group_postprocess ()
{
  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  if test ! -f "$at_check_line_file"; then
    sed "s/^ */$as_me: WARNING: /" <<_ATEOF
      A failure happened in a test group before any test could be
      run. This means that test suite is improperly designed.  Please
      report this failure to <pocl-devel@lists.sourceforge.net>.
_ATEOF
    $as_echo "$at_setup_line" >"$at_check_line_file"
    at_status=99
  fi
  $at_verbose $as_echo_n "$at_group. $at_setup_line: "
  $as_echo_n "$at_group. $at_setup_line: " >> "$at_group_log"
  case $at_xfail:$at_status in
    yes:0)
	at_msg="UNEXPECTED PASS"
	at_res=xpass
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    no:0)
	at_msg="ok"
	at_res=pass
	at_errexit=false
	at_color=$at_grn
	;;
    *:77)
	at_msg='skipped ('`cat "$at_check_line_file"`')'
	at_res=skip
	at_errexit=false
	at_color=$at_blu
	;;
    no:* | *:99)
	at_msg='FAILED ('`cat "$at_check_line_file"`')'
	at_res=fail
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    yes:*)
	at_msg='expected failure ('`cat "$at_check_line_file"`')'
	at_res=xfail
	at_errexit=false
	at_color=$at_lgn
	;;
  esac
  echo "$at_res" > "$at_job_dir/$at_res"
  # In parallel mode, output the summary line only afterwards.
  if test $at_jobs -ne 1 && test -n "$at_verbose"; then
    $as_echo "$at_desc_line $at_color$at_msg$at_std"
  else
    # Make sure there is a separator even with long titles.
    $as_echo " $at_color$at_msg$at_std"
  fi
  at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
  case $at_status in
    0|77)
      # $at_times_file is only available if the group succeeded.
      # We're not including the group log, so the success message
      # is written in the global log separately.  But we also
      # write to the group log in case they're using -d.
      if test -f "$at_times_file"; then
	at_log_msg="$at_log_msg     ("`sed 1d "$at_times_file"`')'
	rm -f "$at_times_file"
      fi
      $as_echo "$at_log_msg" >> "$at_group_log"
      $as_echo "$at_log_msg" >&5

      # Cleanup the group directory, unless the user wants the files
      # or the success was unexpected.
      if $at_debug_p || test $at_res = xpass; then
	at_fn_create_debugging_script
	if test $at_res = xpass && $at_errexit; then
	  echo stop > "$at_stop_file"
	fi
      else
	if test -d "$at_group_dir"; then
	  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	  rm -fr "$at_group_dir"
	fi
	rm -f "$at_test_source"
      fi
      ;;
    *)
      # Upon failure, include the log into the testsuite's global
      # log.  The failure message is written in the group log.  It
      # is later included in the global log.
      $as_echo "$at_log_msg" >> "$at_group_log"

      # Upon failure, keep the group directory for autopsy, and create
      # the debugging script.  With -e, do not start any further tests.
      at_fn_create_debugging_script
      if $at_errexit; then
	echo stop > "$at_stop_file"
      fi
      ;;
  esac
}


## ------------ ##
## Driver loop. ##
## ------------ ##


if (set -m && set +m && set +b) >/dev/null 2>&1; then
  set +b
  at_job_control_on='set -m' at_job_control_off='set +m' at_job_group=-
else
  at_job_control_on=: at_job_control_off=: at_job_group=
fi

for at_signal in 1 2 15; do
  trap 'set +x; set +e
	$at_job_control_off
	at_signal='"$at_signal"'
	echo stop > "$at_stop_file"
	trap "" $at_signal
	at_pgids=
	for at_pgid in `jobs -p 2>/dev/null`; do
	  at_pgids="$at_pgids $at_job_group$at_pgid"
	done
	test -z "$at_pgids" || kill -$at_signal $at_pgids 2>/dev/null
	wait
	if test "$at_jobs" -eq 1 || test -z "$at_verbose"; then
	  echo >&2
	fi
	at_signame=`kill -l $at_signal 2>&1 || echo $at_signal`
	set x $at_signame
	test 1 -gt 2 && at_signame=$at_signal
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: caught signal $at_signame, bailing out" >&5
$as_echo "$as_me: WARNING: caught signal $at_signame, bailing out" >&2;}
	as_fn_arith 128 + $at_signal && exit_status=$as_val
	as_fn_exit $exit_status' $at_signal
done

rm -f "$at_stop_file"
at_first=:

if test $at_jobs -ne 1 &&
     rm -f "$at_job_fifo" &&
     test -n "$at_job_group" &&
     ( mkfifo "$at_job_fifo" && trap 'exit 1' PIPE STOP TSTP ) 2>/dev/null
then
  # FIFO job dispatcher.

  trap 'at_pids=
	for at_pid in `jobs -p`; do
	  at_pids="$at_pids $at_job_group$at_pid"
	done
	if test -n "$at_pids"; then
	  at_sig=TSTP
	  test "${TMOUT+set}" = set && at_sig=STOP
	  kill -$at_sig $at_pids 2>/dev/null
	fi
	kill -STOP $$
	test -z "$at_pids" || kill -CONT $at_pids 2>/dev/null' TSTP

  echo
  # Turn jobs into a list of numbers, starting from 1.
  at_joblist=`$as_echo "$at_groups" | sed -n 1,${at_jobs}p`

  set X $at_joblist
  shift
  for at_group in $at_groups; do
    $at_job_control_on 2>/dev/null
    (
      # Start one test group.
      $at_job_control_off
      if $at_first; then
	exec 7>"$at_job_fifo"
      else
	exec 6<&-
      fi
      trap 'set +x; set +e
	    trap "" PIPE
	    echo stop > "$at_stop_file"
	    echo >&7
	    as_fn_exit 141' PIPE
      at_fn_group_prepare
      if cd "$at_group_dir" &&
	 at_fn_test $at_group &&
	 . "$at_test_source"
      then :; else
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
	at_failed=:
      fi
      at_fn_group_postprocess
      echo >&7
    ) &
    $at_job_control_off
    if $at_first; then
      at_first=false
      exec 6<"$at_job_fifo" 7>"$at_job_fifo"
    fi
    shift # Consume one token.
    if test $# -gt 0; then :; else
      read at_token <&6 || break
      set x $*
    fi
    test -f "$at_stop_file" && break
  done
  exec 7>&-
  # Read back the remaining ($at_jobs - 1) tokens.
  set X $at_joblist
  shift
  if test $# -gt 0; then
    shift
    for at_job
    do
      read at_token
    done <&6
  fi
  exec 6<&-
  wait
else
  # Run serially, avoid forks and other potential surprises.
  for at_group in $at_groups; do
    at_fn_group_prepare
    if cd "$at_group_dir" &&
       at_fn_test $at_group &&
       . "$at_test_source"; then :; else
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
      at_failed=:
    fi
    at_fn_group_postprocess
    test -f "$at_stop_file" && break
    at_first=false
  done
fi

# Wrap up the test suite with summary statistics.
cd "$at_helper_dir"

# Use ?..???? when the list must remain sorted, the faster * otherwise.
at_pass_list=`for f in */pass; do echo $f; done | sed '/\*/d; s,/pass,,'`
at_skip_list=`for f in */skip; do echo $f; done | sed '/\*/d; s,/skip,,'`
at_xfail_list=`for f in */xfail; do echo $f; done | sed '/\*/d; s,/xfail,,'`
at_xpass_list=`for f in ?/xpass ??/xpass ???/xpass ????/xpass; do
		 echo $f; done | sed '/?/d; s,/xpass,,'`
at_fail_list=`for f in ?/fail ??/fail ???/fail ????/fail; do
		echo $f; done | sed '/?/d; s,/fail,,'`

set X $at_pass_list $at_xpass_list $at_xfail_list $at_fail_list $at_skip_list
shift; at_group_count=$#
set X $at_xpass_list; shift; at_xpass_count=$#; at_xpass_list=$*
set X $at_xfail_list; shift; at_xfail_count=$#
set X $at_fail_list; shift; at_fail_count=$#; at_fail_list=$*
set X $at_skip_list; shift; at_skip_count=$#

as_fn_arith $at_group_count - $at_skip_count && at_run_count=$as_val
as_fn_arith $at_xpass_count + $at_fail_count && at_unexpected_count=$as_val
as_fn_arith $at_xfail_count + $at_fail_count && at_total_fail_count=$as_val

# Back to the top directory.
cd "$at_dir"
rm -rf "$at_helper_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
$as_echo "$as_me: ending at: $at_stop_date" >&5
case $at_start_time,$at_stop_time in
  [0-9]*,[0-9]*)
    as_fn_arith $at_stop_time - $at_start_time && at_duration_s=$as_val
    as_fn_arith $at_duration_s / 60 && at_duration_m=$as_val
    as_fn_arith $at_duration_m / 60 && at_duration_h=$as_val
    as_fn_arith $at_duration_s % 60 && at_duration_s=$as_val
    as_fn_arith $at_duration_m % 60 && at_duration_m=$as_val
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    $as_echo "$as_me: test suite duration: $at_duration" >&5
    ;;
esac

echo
$as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
echo
{
  echo
  $as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
  at_color=$at_red
else
  # Don't you just love exponential explosion of the number of cases?
  at_color=$at_red
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." at_color=$at_grn ;;
    0:0:*) at_result="$at_result behaved as expected." at_color=$at_lgn ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_color$at_result$at_std"
  echo "$at_result" >&5
else
  echo "${at_color}ERROR: $at_result$at_std" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    $as_echo "## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##"

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$at_myself" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$at_myself" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$at_myself" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      $as_echo "## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##"
      echo
      for at_group in $at_fail_list
      do
	at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'

	cat "$at_suite_dir/$at_group_normalized/$as_me.log"
	echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## ${at_top_build_prefix}config.log ##
_ASBOX
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  if $at_debug_p; then
    at_msg='per-test log files'
  else
    at_msg="\`${at_testdir+${at_testdir}/}$as_me.log'"
  fi
  $as_echo "Please send $at_msg and all information you think might help:

   To: <pocl-devel@lists.sourceforge.net>
   Subject: [pocl 0.11] $as_me: $at_fail_list${at_fail_list:+ failed${at_xpass_list:+, }}$at_xpass_list${at_xpass_list:+ passed unexpectedly}

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below \`${at_testdir+${at_testdir}/}$as_me.dir'.
"
  exit 1
fi

exit 0

## ------------- ##
## Actual tests. ##
## ------------- ##
#AT_START_1
at_fn_group_banner 1 'testsuite.at:28' \
  "check for pocl version" "                         "
at_xfail=no
(
  $as_echo "1. $at_setup_line: testing $at_desc ..."
  $at_traceon

{ set +x
$as_echo "$at_srcdir/testsuite.at:29: POCL_DEVICES=basic \$abs_top_builddir/tests/runtime/test_version"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic $abs_top_builddir/tests/runtime/test_version" "testsuite.at:29"
( $at_check_trace; POCL_DEVICES=basic $abs_top_builddir/tests/runtime/test_version
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "basic
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1
#AT_START_2
at_fn_group_banner 2 'testsuite.at:36' \
  "example1: dot product" "                          " 1
at_xfail=no
(
  $as_echo "2. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite.at:38: \$abs_top_builddir/examples/example1/example1"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/example1/example1" "testsuite.at:38"
( $at_check_trace; $abs_top_builddir/examples/example1/example1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/example_expout.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_2
#AT_START_3
at_fn_group_banner 3 'testsuite.at:43' \
  "example1: dot product (SPIR64)" "                 " 1
at_xfail=no
(
  $as_echo "3. $at_setup_line: testing $at_desc ..."
  $at_traceon

# This SPIR example works because it does not use local memory nor
# call builtins that are mangled with address spaces.
$as_echo "testsuite.at:46" >"$at_check_line_file"
(! grep "#define POCL_DEVICE_ADDRESS_BITS 64" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:46"

{ set +x
$as_echo "$at_srcdir/testsuite.at:48: \$abs_top_builddir/examples/example1-spir64/example1-spir"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/example1-spir64/example1-spir" "testsuite.at:48"
( $at_check_trace; $abs_top_builddir/examples/example1-spir64/example1-spir
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/example_expout.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_3
#AT_START_4
at_fn_group_banner 4 'testsuite.at:53' \
  "example1: dot product (SPIR32)" "                 " 1
at_xfail=no
(
  $as_echo "4. $at_setup_line: testing $at_desc ..."
  $at_traceon

# This SPIR example works because it does not use local memory nor
# call builtins that are mangled with address spaces.
$as_echo "testsuite.at:56" >"$at_check_line_file"
(! grep "#define POCL_DEVICE_ADDRESS_BITS 32" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:56"

{ set +x
$as_echo "$at_srcdir/testsuite.at:58: \$abs_top_builddir/examples/example1-spir32/example1-spir32"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/example1-spir32/example1-spir32" "testsuite.at:58"
( $at_check_trace; $abs_top_builddir/examples/example1-spir32/example1-spir32
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/example_expout.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_4
#AT_START_5
at_fn_group_banner 5 'testsuite.at:63' \
  "example2: matrix transpose" "                     " 1
at_xfail=no
(
  $as_echo "5. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite.at:65: \$abs_top_builddir/examples/example2/example2"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/example2/example2" "testsuite.at:65"
( $at_check_trace; $abs_top_builddir/examples/example2/example2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_5
#AT_START_6
at_fn_group_banner 6 'testsuite.at:69' \
  "example2a: matrix transpose (automatic locals)" " " 1
at_xfail=no
(
  $as_echo "6. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite.at:71: \$abs_top_builddir/examples/example2a/example2a"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/example2a/example2a" "testsuite.at:71"
( $at_check_trace; $abs_top_builddir/examples/example2a/example2a
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_6
#AT_START_7
at_fn_group_banner 7 'testsuite.at:77' \
  "Kernel functions convert_char*" "                 " 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&
             grep -q "#define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "7. $at_setup_line: testing $at_desc ..."
  $at_traceon



cat >expout <<'_ATEOF'
Running test test_short16...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:85: \$abs_top_builddir/tests/kernel/kernel test_short16"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_short16" "testsuite.at:85"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_short16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_7
#AT_START_8
at_fn_group_banner 8 'testsuite.at:88' \
  "Kernel functions printf" "                        " 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q i686 && at_xfail=yes
      egrep -q "#define LLVM_3_2|#define LLVM_3_3" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "8. $at_setup_line: testing $at_desc ..."
  $at_traceon

# On 32-bit x86, accessing int4 via va_arg segfaults (wrong alignment?)



{ set +x
$as_echo "$at_srcdir/testsuite.at:93: \$abs_top_builddir/tests/kernel/kernel test_printf"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_printf" "testsuite.at:93"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_printf
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/test_printf_expout.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_8
#AT_START_9
at_fn_group_banner 9 'testsuite.at:98' \
  "Kernel functions as_type" "                       " 2
at_xfail=no
(
  $as_echo "9. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "testsuite.at:99" >"$at_check_line_file"
(grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:99"

cat >expout <<'_ATEOF'
Running test test_as_type...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:105: \$abs_top_builddir/tests/kernel/kernel test_as_type"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_as_type" "testsuite.at:105"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_as_type
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_9
#AT_START_10
at_fn_group_banner 10 'testsuite.at:108' \
  "Kernel functions convert_type - scalars" "        " 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc64 && at_xfail=yes
(
  $as_echo "10. $at_setup_line: testing $at_desc ..."
  $at_traceon

# ppc codegen issue, see bug #26


{ set +x
$as_echo "$at_srcdir/testsuite.at:112: \$abs_top_builddir/tests/kernel/kernel test_convert_type_1"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_convert_type_1" "testsuite.at:112"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_convert_type_1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Running test test_convert_type_1...
OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_10
#AT_START_11
at_fn_group_banner 11 'testsuite.at:117' \
  "Kernel functions convert_type - vector of 2" "    " 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc64 && at_xfail=yes
(
  $as_echo "11. $at_setup_line: testing $at_desc ..."
  $at_traceon

# ppc codegen issue, see bug #26


{ set +x
$as_echo "$at_srcdir/testsuite.at:121: \$abs_top_builddir/tests/kernel/kernel test_convert_type_2"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_convert_type_2" "testsuite.at:121"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_convert_type_2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Running test test_convert_type_2...
OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_11
#AT_START_12
at_fn_group_banner 12 'testsuite.at:126' \
  "Kernel functions convert_type - vector of 4" "    " 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc64 && at_xfail=yes
(
  $as_echo "12. $at_setup_line: testing $at_desc ..."
  $at_traceon

# ppc codegen issue, see bug #26


{ set +x
$as_echo "$at_srcdir/testsuite.at:130: \$abs_top_builddir/tests/kernel/kernel test_convert_type_4"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_convert_type_4" "testsuite.at:130"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_convert_type_4
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Running test test_convert_type_4...
OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_12
#AT_START_13
at_fn_group_banner 13 'testsuite.at:135' \
  "Kernel functions convert_type - vector of 8" "    " 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc64 && at_xfail=yes
(
  $as_echo "13. $at_setup_line: testing $at_desc ..."
  $at_traceon

# ppc codegen issue, see bug #26


{ set +x
$as_echo "$at_srcdir/testsuite.at:139: \$abs_top_builddir/tests/kernel/kernel test_convert_type_8"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_convert_type_8" "testsuite.at:139"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_convert_type_8
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Running test test_convert_type_8...
OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_13
#AT_START_14
at_fn_group_banner 14 'testsuite.at:144' \
  "Kernel functions convert_type - vector of 16" "   " 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc64 && at_xfail=yes
(
  $as_echo "14. $at_setup_line: testing $at_desc ..."
  $at_traceon

# ppc codegen issue, see bug #26


{ set +x
$as_echo "$at_srcdir/testsuite.at:148: \$abs_top_builddir/tests/kernel/kernel test_convert_type_16"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_convert_type_16" "testsuite.at:148"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_convert_type_16
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Running test test_convert_type_16...
OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:148"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_14
#AT_START_15
at_fn_group_banner 15 'testsuite.at:155' \
  "Kernel functions min and max when the operands are of different sign" "" 2
at_xfail=no
(
  $as_echo "15. $at_setup_line: testing $at_desc ..."
  $at_traceon

# This used to produces an LLVM 3.3 bug that appeared only with Intel CPUs
# without SSE4.2. http://llvm.org/bugs/show_bug.cgi?id=15977

cat >expout <<'_ATEOF'
Running test test_min_max...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:163: \$abs_top_builddir/tests/kernel/kernel test_min_max"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_min_max" "testsuite.at:163"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_min_max
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:163"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_15
#AT_START_16
at_fn_group_banner 16 'testsuite.at:166' \
  "Kernel functions fmin, fmax, fma" "               " 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc  && at_xfail=yes
(
  $as_echo "16. $at_setup_line: testing $at_desc ..."
  $at_traceon



cat >expout <<'_ATEOF'
Running test test_fmin_fmax_fma...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:173: \$abs_top_builddir/tests/kernel/kernel test_fmin_fmax_fma"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_fmin_fmax_fma" "testsuite.at:173"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_fmin_fmax_fma
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:173"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_16
#AT_START_17
at_fn_group_banner 17 'testsuite.at:177' \
  "A saturating conversion from long to uint" "      " 2
at_xfail=no
(
  $as_echo "17. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
Running test test_convert_sat_regression...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:183: \$abs_top_builddir/tests/kernel/kernel test_convert_sat_regression"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_convert_sat_regression" "testsuite.at:183"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_convert_sat_regression
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_17
#AT_START_18
at_fn_group_banner 18 'testsuite.at:187' \
  "Kernel functions abs bitselect clz max min popcount" "" 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
(
  $as_echo "18. $at_setup_line: testing $at_desc ..."
  $at_traceon

#Fails on tce due to bug #1160383
#AT_KEYWORDS([tce])

cat >expout <<'_ATEOF'
Running test test_bitselect...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:195: \$abs_top_builddir/tests/kernel/kernel test_bitselect"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_bitselect" "testsuite.at:195"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_bitselect
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:195"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_18
#AT_START_19
at_fn_group_banner 19 'testsuite.at:198' \
  "Kernel functions fabs signbit isfinite isinf isnan isnormal copysign ilogb ldexp" "" 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc64 && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&
             grep -q "#define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "19. $at_setup_line: testing $at_desc ..."
  $at_traceon

#Fails with what looks like rounding with vecmathlib on ppc32. ppc64 uninvestigated



cat >expout <<'_ATEOF'
Running test test_fabs...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:208: \$abs_top_builddir/tests/kernel/kernel test_fabs"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_fabs" "testsuite.at:208"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_fabs
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:208"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_19
#AT_START_20
at_fn_group_banner 20 'testsuite.at:211' \
  "Kernel functions abs abs_diff add_sat hadd mad_hi mad_sat mul_hi rhadd sub_sat (loopvec)" "" 2
at_xfail=no
      grep OCL_KERNEL_TARGET $abs_top_builddir/config.h | cut -d\" -f2 | grep -q x86_64 &&
             grep -q "#define LLVM_3_5" $abs_top_builddir/config.h && at_xfail=yes
      grep OCL_KERNEL_TARGET $abs_top_builddir/config.h | cut -d\" -f2 | grep -q x86_64 &&
             grep -q "#define LLVM_3_6" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "20. $at_setup_line: testing $at_desc ..."
  $at_traceon

# 3-element vector cases fail when vectorizer is enabled,
# at least with Intel Core i5 and AMD FX8. Assume it fails on all others too.


cat >expout <<'_ATEOF'
Running test test_hadd...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:222: POCL_WORK_GROUP_METHOD=loopvec \$abs_top_builddir/tests/kernel/kernel test_hadd 2>&1"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=loopvec $abs_top_builddir/tests/kernel/kernel test_hadd 2>&1" "testsuite.at:222"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loopvec $abs_top_builddir/tests/kernel/kernel test_hadd 2>&1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:222"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_20
#AT_START_21
at_fn_group_banner 21 'testsuite.at:225' \
  "Kernel functions abs abs_diff add_sat hadd mad_hi mad_sat mul_hi rhadd sub_sat (loops)" "" 2
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
(
  $as_echo "21. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
Running test test_hadd...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:231: POCL_WORK_GROUP_METHOD=loops \$abs_top_builddir/tests/kernel/kernel test_hadd 2>&1"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/kernel/kernel test_hadd 2>&1" "testsuite.at:231"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/kernel/kernel test_hadd 2>&1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_21
#AT_START_22
at_fn_group_banner 22 'testsuite.at:234' \
  "Kernel functions << >> rotate" "                  " 2
at_xfail=no
      grep -q "#define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&
             grep -q "#define LLVM_3_3" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "22. $at_setup_line: testing $at_desc ..."
  $at_traceon

# Fails because of bugs in rotate.
# At least in Debian 6.0/x86_64/LLVM 3.2 and
# Ubuntu 12.04/x86/LLVM 3.2

# tce fails currently this test so removed it from the keywords.
# https://bugs.launchpad.net/tce/+bug/1180309
#LLVM 3.3 regression on ppc - looks like an optimization+ppc codegen bug


cat >expout <<'_ATEOF'
Running test test_rotate...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:249: \$abs_top_builddir/tests/kernel/kernel test_rotate"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_rotate" "testsuite.at:249"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_rotate
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:249"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_22
#AT_START_23
at_fn_group_banner 23 'testsuite.at:252' \
  "Trigonometric functions" "                        " 2
at_xfail=no
(
  $as_echo "23. $at_setup_line: testing $at_desc ..."
  $at_traceon

cat >expout <<'_ATEOF'
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:256: \$abs_top_builddir/examples/trig/trig"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/trig/trig" "testsuite.at:256"
( $at_check_trace; $abs_top_builddir/examples/trig/trig
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:256"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_23
#AT_START_24
at_fn_group_banner 24 'testsuite.at:259' \
  "Sampler address clamp" "                          " 2
at_xfail=no
(
  $as_echo "24. $at_setup_line: testing $at_desc ..."
  $at_traceon

cat >expout <<'_ATEOF'
Running test test_sampler_address_clamp...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:264: \$abs_top_builddir/tests/kernel/sampler_address_clamp"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/sampler_address_clamp" "testsuite.at:264"
( $at_check_trace; $abs_top_builddir/tests/kernel/sampler_address_clamp
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:264"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_24
#AT_START_25
at_fn_group_banner 25 'testsuite.at:267' \
  "Image query functions" "                          " 2
at_xfail=no
(
  $as_echo "25. $at_setup_line: testing $at_desc ..."
  $at_traceon

cat >expout <<'_ATEOF'
Running test test_image_query_funcs...
OK
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite.at:272: \$abs_top_builddir/tests/kernel/image_query_funcs"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/image_query_funcs" "testsuite.at:272"
( $at_check_trace; $abs_top_builddir/tests/kernel/image_query_funcs
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:272"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_25
#AT_START_26
at_fn_group_banner 26 'testsuite.at:275' \
  "Kernel functions: shuffle charN" "                " 2
at_xfail=no
(
  $as_echo "26. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
OK
_ATEOF
]
{ set +x
$as_echo "$at_srcdir/testsuite.at:280: \$abs_top_builddir/tests/kernel/test_shuffle char"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/test_shuffle char" "testsuite.at:280"
( $at_check_trace; $abs_top_builddir/tests/kernel/test_shuffle char
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:280"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_26
#AT_START_27
at_fn_group_banner 27 'testsuite.at:283' \
  "Kernel functions: shuffle shortN" "               " 2
at_xfail=no
(
  $as_echo "27. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
OK
_ATEOF
]
{ set +x
$as_echo "$at_srcdir/testsuite.at:288: \$abs_top_builddir/tests/kernel/test_shuffle short"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/test_shuffle short" "testsuite.at:288"
( $at_check_trace; $abs_top_builddir/tests/kernel/test_shuffle short
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:288"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_27
#AT_START_28
at_fn_group_banner 28 'testsuite.at:291' \
  "Kernel functions: shuffle ushortN" "              " 2
at_xfail=no
(
  $as_echo "28. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
OK
_ATEOF
]
{ set +x
$as_echo "$at_srcdir/testsuite.at:296: \$abs_top_builddir/tests/kernel/test_shuffle ushort"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/test_shuffle ushort" "testsuite.at:296"
( $at_check_trace; $abs_top_builddir/tests/kernel/test_shuffle ushort
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:296"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_28
#AT_START_29
at_fn_group_banner 29 'testsuite.at:299' \
  "Kernel functions: shuffle halfN" "                " 2
at_xfail=no
      grep -q "#define LLVM_3_3" $abs_top_builddir/config.h ||
             grep -q "#define LLVM_3_4" $abs_top_builddir/config.h  && at_xfail=yes
(
  $as_echo "29. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
OK
_ATEOF
]
$as_echo "testsuite.at:304" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite.at:304"

{ set +x
$as_echo "$at_srcdir/testsuite.at:307: \$abs_top_builddir/tests/kernel/test_shuffle half"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/test_shuffle half" "testsuite.at:307"
( $at_check_trace; $abs_top_builddir/tests/kernel/test_shuffle half
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:307"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_29
#AT_START_30
at_fn_group_banner 30 'testsuite.at:310' \
  "Kernel functions: shuffle intN" "                 " 2
at_xfail=no
(
  $as_echo "30. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
OK
_ATEOF
]
{ set +x
$as_echo "$at_srcdir/testsuite.at:315: \$abs_top_builddir/tests/kernel/test_shuffle int"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/test_shuffle int" "testsuite.at:315"
( $at_check_trace; $abs_top_builddir/tests/kernel/test_shuffle int
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_30
#AT_START_31
at_fn_group_banner 31 'testsuite.at:318' \
  "Kernel functions: shuffle uintN" "                " 2
at_xfail=no
(
  $as_echo "31. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
OK
_ATEOF
]
{ set +x
$as_echo "$at_srcdir/testsuite.at:323: \$abs_top_builddir/tests/kernel/test_shuffle uint"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/test_shuffle uint" "testsuite.at:323"
( $at_check_trace; $abs_top_builddir/tests/kernel/test_shuffle uint
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:323"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_31
#AT_START_32
at_fn_group_banner 32 'testsuite.at:326' \
  "Kernel functions: shuffle floatN" "               " 2
at_xfail=no
(
  $as_echo "32. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
OK
_ATEOF
]
{ set +x
$as_echo "$at_srcdir/testsuite.at:331: \$abs_top_builddir/tests/kernel/test_shuffle float"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/test_shuffle float" "testsuite.at:331"
( $at_check_trace; $abs_top_builddir/tests/kernel/test_shuffle float
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:331"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_32
#AT_START_33
at_fn_group_banner 33 'testsuite.at:334' \
  "Kernel functions: shuffle longN" "                " 2
at_xfail=no
(
  $as_echo "33. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
OK
_ATEOF
]
{ set +x
$as_echo "$at_srcdir/testsuite.at:339: \$abs_top_builddir/tests/kernel/test_shuffle long"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/test_shuffle long" "testsuite.at:339"
( $at_check_trace; $abs_top_builddir/tests/kernel/test_shuffle long
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:339"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_33
#AT_START_34
at_fn_group_banner 34 'testsuite.at:342' \
  "Kernel functions: shuffle ulongN" "               " 2
at_xfail=no
(
  $as_echo "34. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
OK
_ATEOF
]
{ set +x
$as_echo "$at_srcdir/testsuite.at:347: \$abs_top_builddir/tests/kernel/test_shuffle ulong"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/test_shuffle ulong" "testsuite.at:347"
( $at_check_trace; $abs_top_builddir/tests/kernel/test_shuffle ulong
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:347"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_34
#AT_START_35
at_fn_group_banner 35 'testsuite.at:350' \
  "Kernel functions: shuffle doubleN" "              " 2
at_xfail=no
(
  $as_echo "35. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
OK
_ATEOF
]
{ set +x
$as_echo "$at_srcdir/testsuite.at:355: \$abs_top_builddir/tests/kernel/test_shuffle double"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/test_shuffle double" "testsuite.at:355"
( $at_check_trace; $abs_top_builddir/tests/kernel/test_shuffle double
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:355"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_35
#AT_START_36
at_fn_group_banner 36 'testsuite.at:360' \
  "Scalar wave equation" "                           " 3
at_xfail=no
(
  $as_echo "36. $at_setup_line: testing $at_desc ..."
  $at_traceon


#this is a check for if doubles are available
$as_echo "testsuite.at:363" >"$at_check_line_file"
(grep DISABLE_LONG $abs_top_builddir/Makefile) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite.at:363"
{ set +x
$as_echo "$at_srcdir/testsuite.at:364: \$abs_top_builddir/examples/scalarwave/scalarwave"
at_fn_check_prepare_dynamic "$abs_top_builddir/examples/scalarwave/scalarwave" "testsuite.at:364"
( $at_check_trace; $abs_top_builddir/examples/scalarwave/scalarwave
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/scalarwave_expout.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite.at:364"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_36
#AT_START_37
at_fn_group_banner 37 'testsuite-workgroup.at:28' \
  "unconditional barriers (full replication)" "      " 4
at_xfail=no
(
  $as_echo "37. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:30: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2" "testsuite-workgroup.at:30"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/basic_barriers_2_2_2_2.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_37
#AT_START_38
at_fn_group_banner 38 'testsuite-workgroup.at:35' \
  "unconditional barriers (loops)" "                 " 4
at_xfail=no
(
  $as_echo "38. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:37: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2" "testsuite-workgroup.at:37"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/basic_barriers_2_2_2_2.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_38
#AT_START_39
at_fn_group_banner 39 'testsuite-workgroup.at:42' \
  "unbarriered for loops (full replication)" "       " 4
at_xfail=no
(
  $as_echo "39. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:44: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1" "testsuite-workgroup.at:44"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/forloops_2_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_39
#AT_START_40
at_fn_group_banner 40 'testsuite-workgroup.at:49' \
  "unbarriered for loops (loops)" "                  " 4
at_xfail=no
(
  $as_echo "40. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:51: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1" "testsuite-workgroup.at:51"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/forloops_2_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_40
#AT_START_41
at_fn_group_banner 41 'testsuite-workgroup.at:56' \
  "barriered for loops (full replication)" "         " 4
at_xfail=no
(
  $as_echo "41. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:58: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1" "testsuite-workgroup.at:58"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/loopbarriers_2_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_41
#AT_START_42
at_fn_group_banner 42 'testsuite-workgroup.at:63' \
  "barriered for loops (loops)" "                    " 4
at_xfail=no
(
  $as_echo "42. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:65: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1" "testsuite-workgroup.at:65"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/loopbarriers_2_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_42
#AT_START_43
at_fn_group_banner 43 'testsuite-workgroup.at:70' \
  "conditional barrier (full replication)" "         " 4
at_xfail=no
(
  $as_echo "43. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:72: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1" "testsuite-workgroup.at:72"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/cond_barriers_1_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_43
#AT_START_44
at_fn_group_banner 44 'testsuite-workgroup.at:77' \
  "conditional barrier (loops)" "                    " 4
at_xfail=no
(
  $as_echo "44. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:79: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1" "testsuite-workgroup.at:79"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/cond_barriers_1_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_44
#AT_START_45
at_fn_group_banner 45 'testsuite-workgroup.at:84' \
  "b-loop with none of the WIs reaching the barrier (full replication)" "" 4
at_xfail=no
(
  $as_echo "45. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:86: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1" "testsuite-workgroup.at:86"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/tricky_for_1_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_45
#AT_START_46
at_fn_group_banner 46 'testsuite-workgroup.at:91' \
  "b-loop with none of the WIs reaching the barrier (loops)" "" 4
at_xfail=no
(
  $as_echo "46. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:93: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1" "testsuite-workgroup.at:93"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/tricky_for_1_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_46
#AT_START_47
at_fn_group_banner 47 'testsuite-workgroup.at:98' \
  "forcing horizontal parallelization to some outer loops (repl)" "" 4
at_xfail=no
(
  $as_echo "47. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:100: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1" "testsuite-workgroup.at:100"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/outerlooppar_2_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_47
#AT_START_48
at_fn_group_banner 48 'testsuite-workgroup.at:105' \
  "forcing horizontal parallelization to some outer loops (loops)" "" 4
at_xfail=no
(
  $as_echo "48. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:107: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1" "testsuite-workgroup.at:107"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/outerlooppar_2_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_48
#AT_START_49
at_fn_group_banner 49 'testsuite-workgroup.at:112' \
  "different implicit barrier injection scenarios (loops)" "" 4
at_xfail=no
(
  $as_echo "49. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:114: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops \$abs_top_builddir/tests/workgroup/run_kernel implicit_barriers.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/workgroup/run_kernel implicit_barriers.cl 1 2 1 1" "testsuite-workgroup.at:114"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/workgroup/run_kernel implicit_barriers.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/implicit_barriers_1_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:114"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_49
#AT_START_50
at_fn_group_banner 50 'testsuite-workgroup.at:119' \
  "loop with two paths to the latch (full replication)" "" 4
at_xfail=no
(
  $as_echo "50. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:121: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1" "testsuite-workgroup.at:121"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/for_bug_1_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_50
#AT_START_51
at_fn_group_banner 51 'testsuite-workgroup.at:126' \
  "loop with two paths to the latch (loops)" "       " 4
at_xfail=no
(
  $as_echo "51. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:128: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1" "testsuite-workgroup.at:128"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/for_bug_1_2_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:128"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_51
#AT_START_52
at_fn_group_banner 52 'testsuite-workgroup.at:133' \
  "b-loop with two latches (full replication)" "     " 4
at_xfail=no
(
  $as_echo "52. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:135: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1" "testsuite-workgroup.at:135"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/multilatch_bloop_1_3_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:135"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_52
#AT_START_53
at_fn_group_banner 53 'testsuite-workgroup.at:140' \
  "b-loop with two latches (loops)" "                " 4
at_xfail=no
(
  $as_echo "53. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:142: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops \$abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1"
at_fn_check_prepare_dynamic "POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1" "testsuite-workgroup.at:142"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/multilatch_bloop_1_3_1_1.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_53
#AT_START_54
at_fn_group_banner 54 'testsuite-workgroup.at:147' \
  "workgroup_sizes: work-items get wrong ids (full replication)" "" 4
at_xfail=no
(
  $as_echo "54. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:149: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/workgroup/run_kernel print_all_ids.cl 1 1 1 4 | sort"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-workgroup.at:149"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel print_all_ids.cl 1 1 1 4 | sort
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/print_all_ids_114114.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:149"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_54
#AT_START_55
at_fn_group_banner 55 'testsuite-workgroup.at:155' \
  "workgroup_sizes: work-items get wrong ids (loop)" "" 4
at_xfail=no
(
  $as_echo "55. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-workgroup.at:157: POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/workgroup/run_kernel print_all_ids.cl 1 1 1 4 | sort"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-workgroup.at:157"
( $at_check_trace; POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel print_all_ids.cl 1 1 1 4 | sort
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/workgroup/print_all_ids_114114.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-workgroup.at:157"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_55
#AT_START_56
at_fn_group_banner 56 'testsuite-regression.at:4' \
  "phi nodes not replicated (repl) - lp:927573" "    " 5
at_xfail=no
(
  $as_echo "56. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:6" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:6"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:7: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_loop_phi_replication"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_loop_phi_replication" "testsuite-regression.at:7"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_loop_phi_replication
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:7"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_56
#AT_START_57
at_fn_group_banner 57 'testsuite-regression.at:10' \
  "phi nodes not replicated (loops) - lp:927573" "   " 5
at_xfail=no
(
  $as_echo "57. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:12" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:12"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:13: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_loop_phi_replication"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_loop_phi_replication" "testsuite-regression.at:13"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_loop_phi_replication
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:13"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_57
#AT_START_58
at_fn_group_banner 58 'testsuite-regression.at:16' \
  "issues with local pointers (repl) - lp:918801" "  " 5
at_xfail=no
(
  $as_echo "58. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:18" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:18"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:19: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_locals"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_locals" "testsuite-regression.at:19"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_locals
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:19"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_58
#AT_START_59
at_fn_group_banner 59 'testsuite-regression.at:22' \
  "issues with local pointers (loops) - lp:918801" " " 5
at_xfail=no
(
  $as_echo "59. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:24" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:24"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:25: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_locals"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_locals" "testsuite-regression.at:25"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_locals
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:25"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_59
#AT_START_60
at_fn_group_banner 60 'testsuite-regression.at:28' \
  "barrier between two for loops (repl)" "           " 5
at_xfail=no
(
  $as_echo "60. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:30" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:30"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:31: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_barrier_between_for_loops"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_barrier_between_for_loops" "testsuite-regression.at:31"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_barrier_between_for_loops
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_60
#AT_START_61
at_fn_group_banner 61 'testsuite-regression.at:34' \
  "barrier between two for loops (loops)" "          " 5
at_xfail=no
(
  $as_echo "61. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:36" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:36"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:37: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_barrier_between_for_loops"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_barrier_between_for_loops" "testsuite-regression.at:37"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_barrier_between_for_loops
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_61
#AT_START_62
at_fn_group_banner 62 'testsuite-regression.at:40' \
  "simple for-loop with a barrier inside (repl)" "   " 5
at_xfail=no
(
  $as_echo "62. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:42" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:42"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:43: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_simple_for_with_a_barrier"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_simple_for_with_a_barrier" "testsuite-regression.at:43"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_simple_for_with_a_barrier
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_62
#AT_START_63
at_fn_group_banner 63 'testsuite-regression.at:46' \
  "simple for-loop with a barrier inside (loops)" "  " 5
at_xfail=no
(
  $as_echo "63. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:48" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:48"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:49: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_simple_for_with_a_barrier"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_simple_for_with_a_barrier" "testsuite-regression.at:49"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_simple_for_with_a_barrier
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_63
#AT_START_64
at_fn_group_banner 64 'testsuite-regression.at:52' \
  "for-loop with computation after the brexit (repl) - lp:938123" "" 5
at_xfail=no
(
  $as_echo "64. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:54" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:54"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:55: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers" "testsuite-regression.at:55"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_64
#AT_START_65
at_fn_group_banner 65 'testsuite-regression.at:58' \
  "for-loop with computation after the brexit (loops) - lp:938123" "" 5
at_xfail=no
(
  $as_echo "65. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:60" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:60"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:61: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers" "testsuite-regression.at:61"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_multi_level_loops_with_barriers
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_65
#AT_START_66
at_fn_group_banner 66 'testsuite-regression.at:64' \
  "for-loop with a variable iteration count (repl) - lp:938883" "" 5
at_xfail=no
(
  $as_echo "66. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:66" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:66"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:67: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_for_with_var_iteration_count"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_for_with_var_iteration_count" "testsuite-regression.at:67"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_for_with_var_iteration_count
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_66
#AT_START_67
at_fn_group_banner 67 'testsuite-regression.at:70' \
  "for-loop with a variable iteration count (loops) - lp:938883" "" 5
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&\
  grep -q "define LLVM_3_1" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "67. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:72" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:72"
#this broke on ppc in commit 525, for LLVM 3.1

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:76: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_for_with_var_iteration_count"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_for_with_var_iteration_count" "testsuite-regression.at:76"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_for_with_var_iteration_count
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_67
#AT_START_68
at_fn_group_banner 68 'testsuite-regression.at:79' \
  "early return before a barrier region (repl) - lp:940248" "" 5
at_xfail=no
(
  $as_echo "68. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:81" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:81"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:82: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_early_return"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_early_return" "testsuite-regression.at:82"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_early_return
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_68
#AT_START_69
at_fn_group_banner 69 'testsuite-regression.at:85' \
  "early return before a barrier region (loops) - lp:940248" "" 5
at_xfail=no
(
  $as_echo "69. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:87" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:87"
#AT_SKIP_IF(true)
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:89: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_early_return"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_early_return" "testsuite-regression.at:89"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_early_return
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_69
#AT_START_70
at_fn_group_banner 70 'testsuite-regression.at:92' \
  "id-dependent computation before kernel exit (repl) - lp:940549" "" 5
at_xfail=no
(
  $as_echo "70. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:94" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:94"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:95: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_id_dependent_computation"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_id_dependent_computation" "testsuite-regression.at:95"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_id_dependent_computation
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_70
#AT_START_71
at_fn_group_banner 71 'testsuite-regression.at:98' \
  "id-dependent computation before kernel exit (loops) - lp:940549" "" 5
at_xfail=no
(
  $as_echo "71. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:100" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:100"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:101: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_id_dependent_computation"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_id_dependent_computation" "testsuite-regression.at:101"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_id_dependent_computation
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_71
#AT_START_72
at_fn_group_banner 72 'testsuite-regression.at:104' \
  "struct kernel arguments - lp:987905" "            " 5
at_xfail=yes
(
  $as_echo "72. $at_setup_line: testing $at_desc ..."
  $at_traceon


# Skip for now as this passes and fails depending on the target (ABI).
$as_echo "testsuite-regression.at:107" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:107"
$as_echo "testsuite-regression.at:108" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:108"

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:110: \$abs_top_builddir/tests/regression/test_structs_as_args"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/regression/test_structs_as_args" "testsuite-regression.at:110"
( $at_check_trace; $abs_top_builddir/tests/regression/test_structs_as_args
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:110"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_72
#AT_START_73
at_fn_group_banner 73 'testsuite-regression.at:113' \
  "vector kernel arguments - lp:987905" "            " 5
at_xfail=no
      grep LLVM_CXX_FLAGS $abs_top_builddir/config.log | grep -q -v DNDEBUG && at_xfail=yes
      grep LLVM_CXX_FLAGS $abs_top_builddir/config.log | grep -q _DEBUG && at_xfail=yes
(
  $as_echo "73. $at_setup_line: testing $at_desc ..."
  $at_traceon

$as_echo "testsuite-regression.at:114" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:114"
# Skip for now as this passes and fails depending on the target (ABI).

$as_echo "testsuite-regression.at:117" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:117"
# This test fails with an assert. If asserts are off, it succeeds.
# It fails depending if the argument list generated to the kernel
# function happens to be 1:1 with the clKernelSetArgs indices or not
# and that depends on the CC/ABI of the target at hand.


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:124: \$abs_top_builddir/tests/regression/test_vectors_as_args"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/regression/test_vectors_as_args" "testsuite-regression.at:124"
( $at_check_trace; $abs_top_builddir/tests/regression/test_vectors_as_args
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_73
#AT_START_74
at_fn_group_banner 74 'testsuite-regression.at:127' \
  "barrier just before return (repl) - lp:1012030" " " 5
at_xfail=no
(
  $as_echo "74. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:129" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:129"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:130: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_barrier_before_return"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_barrier_before_return" "testsuite-regression.at:130"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_barrier_before_return
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:130"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_74
#AT_START_75
at_fn_group_banner 75 'testsuite-regression.at:133' \
  "barrier just before return (loops) - lp:1012030" "" 5
at_xfail=no
(
  $as_echo "75. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:135" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:135"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:136: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_barrier_before_return"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_barrier_before_return" "testsuite-regression.at:136"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_barrier_before_return
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:136"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_75
#AT_START_76
at_fn_group_banner 76 'testsuite-regression.at:139' \
  "infinite loop (repl) - lp:941558" "               " 5
at_xfail=no
(
  $as_echo "76. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:141" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:141"
$as_echo "testsuite-regression.at:142" >"$at_check_line_file"
( env | grep -q POCL_IMPLICIT_FINISH) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:142"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:143: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_infinite_loop"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_infinite_loop" "testsuite-regression.at:143"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_infinite_loop
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:143"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_76
#AT_START_77
at_fn_group_banner 77 'testsuite-regression.at:146' \
  "infinite loop (loops) - lp:941558" "              " 5
at_xfail=no
(
  $as_echo "77. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:148" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:148"
$as_echo "testsuite-regression.at:149" >"$at_check_line_file"
( env | grep -q POCL_IMPLICIT_FINISH) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:149"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:150: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_infinite_loop"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_infinite_loop" "testsuite-regression.at:150"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_infinite_loop
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:150"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_77
#AT_START_78
at_fn_group_banner 78 'testsuite-regression.at:153' \
  "passing a constant array as an arg - lp:1032203" "" 5
at_xfail=no
(
  $as_echo "78. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:155" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:155"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:156: \$abs_top_builddir/tests/regression/test_constant_array"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/regression/test_constant_array" "testsuite-regression.at:156"
( $at_check_trace; $abs_top_builddir/tests/regression/test_constant_array
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_78
#AT_START_79
at_fn_group_banner 79 'testsuite-regression.at:159' \
  "undominated variable from conditional barrier handling (repl) - lp:1045835" "" 5
at_xfail=no
(
  $as_echo "79. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:161" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:161"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:162: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_undominated_variable"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_undominated_variable" "testsuite-regression.at:162"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_undominated_variable
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_79
#AT_START_80
at_fn_group_banner 80 'testsuite-regression.at:165' \
  "undominated variable from conditional barrier handling (loops) - lp:1045835" "" 5
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&\
  grep -q "define LLVM_3_1" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "80. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:167" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:167"
#this broke on ppc in commit 525, for LLVM 3.1

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:171: POCL_WORK_GROUP_METHOD=workitemloops \$abs_top_builddir/tests/regression/test_undominated_variable"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_undominated_variable" "testsuite-regression.at:171"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/regression/test_undominated_variable
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_80
#AT_START_81
at_fn_group_banner 81 'testsuite-regression.at:174' \
  "clSetKernelArg overwriting the previous kernel's args - lp:1075134" "" 5
at_xfail=no
(
  $as_echo "81. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:176" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:176"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:177: \$abs_top_builddir/tests/regression/test_setargs"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/regression/test_setargs" "testsuite-regression.at:177"
( $at_check_trace; $abs_top_builddir/tests/regression/test_setargs
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:177"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_81
#AT_START_82
at_fn_group_banner 82 'testsuite-regression.at:180' \
  "setting a buffer argument to NULL causes a segfault - lp:1109030" "" 5
at_xfail=no
(
  $as_echo "82. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:182" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:182"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:183: \$abs_top_builddir/tests/regression/test_null_arg"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/regression/test_null_arg" "testsuite-regression.at:183"
( $at_check_trace; $abs_top_builddir/tests/regression/test_null_arg
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:183"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_82
#AT_START_83
at_fn_group_banner 83 'testsuite-regression.at:186' \
  "sizeof(uint)" "                                   " 5
at_xfail=no
(
  $as_echo "83. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:188: \$abs_top_builddir/tests/kernel/kernel test_sizeof"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_sizeof" "testsuite-regression.at:188"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_sizeof
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/kernel/test_sizeof_expout.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:188"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_83
#AT_START_84
at_fn_group_banner 84 'testsuite-regression.at:193' \
  "block" "                                          " 5
at_xfail=no
      grep -q "#define LLVM_3_4" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "84. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:195" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:195"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:196: \$abs_top_builddir/tests/kernel/kernel test_block"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/kernel/kernel test_block" "testsuite-regression.at:196"
( $at_check_trace; $abs_top_builddir/tests/kernel/kernel test_block
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/kernel/test_block_expout.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:196"
$at_failed && at_fn_log_failure
$at_traceon; }

# LLVM 3.4's crashes with an illegal const expr cast. Unresolved.

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_84
#AT_START_85
at_fn_group_banner 85 'testsuite-regression.at:203' \
  "case with multiple variable length loops and a barrier in one" "" 5
at_xfail=no
(
  $as_echo "85. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-regression.at:205" >"$at_check_line_file"
(! grep "#define HAVE_OPENCL_HPP" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-regression.at:205"
{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:206: POCL_WORK_GROUP_METHOD=workitemrepl \$abs_top_builddir/tests/regression/test_fors_with_var_iteration_counts"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_fors_with_var_iteration_counts" "testsuite-regression.at:206"
( $at_check_trace; POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/regression/test_fors_with_var_iteration_counts
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:206"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_85
#AT_START_86
at_fn_group_banner 86 'testsuite-regression.at:209' \
  "assigning a loop iterator variable to a private makes it local - issue 94 (repl)" "" 5
at_xfail=no
(
  $as_echo "86. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
Changed value at global_id: 67599, local_id 3, group_id 16899, to: 854
Value is changed at global_id: 67599, local_id 3, group_id 16899, to: 854
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:215: POCL_WORK_GROUP_METHOD=repl \$abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=repl $abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local" "testsuite-regression.at:215"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl $abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:215"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_86
#AT_START_87
at_fn_group_banner 87 'testsuite-regression.at:218' \
  "assigning a loop iterator variable to a private makes it local - issue 94 (loops)" "" 5
at_xfail=no
(
  $as_echo "87. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
Changed value at global_id: 67599, local_id 3, group_id 16899, to: 854
Value is changed at global_id: 67599, local_id 3, group_id 16899, to: 854
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:224: POCL_WORK_GROUP_METHOD=loops \$abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local" "testsuite-regression.at:224"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_87
#AT_START_88
at_fn_group_banner 88 'testsuite-regression.at:227' \
  "assigning a loop iterator variable to a private makes it local 2 - issue 102 (repl)" "" 5
at_xfail=no
(
  $as_echo "88. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
changing the value at global_id: 6, local_id 2, group_id 1, to: 3
value is changed at global_id: 6, local_id 2, group_id 1, to: 3
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:233: POCL_WORK_GROUP_METHOD=repl \$abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local_2"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=repl $abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local_2" "testsuite-regression.at:233"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl $abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local_2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:233"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_88
#AT_START_89
at_fn_group_banner 89 'testsuite-regression.at:236' \
  "assigning a loop iterator variable to a private makes it local 2 - issue 102 (loops)" "" 5
at_xfail=no
(
  $as_echo "89. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >expout <<'_ATEOF'
changing the value at global_id: 6, local_id 2, group_id 1, to: 3
value is changed at global_id: 6, local_id 2, group_id 1, to: 3
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite-regression.at:242: POCL_WORK_GROUP_METHOD=loops \$abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local_2"
at_fn_check_prepare_dynamic "POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local_2" "testsuite-regression.at:242"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/regression/test_assign_loop_variable_to_privvar_makes_it_local_2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-regression.at:242"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_89
#AT_START_90
at_fn_group_banner 90 'testsuite-runtime.at:4' \
  "clGetDeviceInfo" "                                " 6
at_xfail=no
(
  $as_echo "90. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:6: \$abs_top_builddir/tests/runtime/test_clGetDeviceInfo"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clGetDeviceInfo" "testsuite-runtime.at:6"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clGetDeviceInfo
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:6"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_90
#AT_START_91
at_fn_group_banner 91 'testsuite-runtime.at:9' \
  "clEnqueueNativeKernel" "                          " 6
at_xfail=no
(
  $as_echo "91. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:11: \$abs_top_builddir/tests/runtime/test_clEnqueueNativeKernel"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clEnqueueNativeKernel" "testsuite-runtime.at:11"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clEnqueueNativeKernel
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:11"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_91
#AT_START_92
at_fn_group_banner 92 'testsuite-runtime.at:14' \
  "clGetEventInfo" "                                 " 6
at_xfail=no
(
  $as_echo "92. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:16: \$abs_top_builddir/tests/runtime/test_clGetEventInfo"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clGetEventInfo" "testsuite-runtime.at:16"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clGetEventInfo
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_92
#AT_START_93
at_fn_group_banner 93 'testsuite-runtime.at:19' \
  "clCreateProgramWithBinary" "                      " 6
at_xfail=no
(
  $as_echo "93. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:21: \$abs_top_builddir/tests/runtime/test_clCreateProgramWithBinary"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clCreateProgramWithBinary" "testsuite-runtime.at:21"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clCreateProgramWithBinary
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_93
#AT_START_94
at_fn_group_banner 94 'testsuite-runtime.at:25' \
  "clBuildProgram" "                                 " 6
at_xfail=no
(
  $as_echo "94. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:27: cd \$abs_top_srcdir/tests/runtime/; \$abs_top_builddir/tests/runtime/test_clBuildProgram"
at_fn_check_prepare_dynamic "cd $abs_top_srcdir/tests/runtime/; $abs_top_builddir/tests/runtime/test_clBuildProgram" "testsuite-runtime.at:27"
( $at_check_trace; cd $abs_top_srcdir/tests/runtime/; $abs_top_builddir/tests/runtime/test_clBuildProgram
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:27"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_94
#AT_START_95
at_fn_group_banner 95 'testsuite-runtime.at:30' \
  "clFinish" "                                       " 6
at_xfail=no
(
  $as_echo "95. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:32: \$abs_top_builddir/tests/runtime/test_clFinish | grep \"ABABC\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-runtime.at:32"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clFinish | grep "ABABC"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ABABC
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_95
#AT_START_96
at_fn_group_banner 96 'testsuite-runtime.at:36' \
  "clSetEventCallback" "                             " 6
at_xfail=no
(
  $as_echo "96. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:38: \$abs_top_builddir/tests/runtime/test_clSetEventCallback"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clSetEventCallback" "testsuite-runtime.at:38"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clSetEventCallback
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/tests/runtime/test_clSetEventCallback_expout.txt)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_96
#AT_START_97
at_fn_group_banner 97 'testsuite-runtime.at:43' \
  "clGetSupportedImageFormats" "                     " 6
at_xfail=no
(
  $as_echo "97. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:45: POCL_DEVICES=\"pthread pthread\" \$abs_top_builddir/tests/runtime/test_clGetSupportedImageFormats"
at_fn_check_prepare_dynamic "POCL_DEVICES=\"pthread pthread\" $abs_top_builddir/tests/runtime/test_clGetSupportedImageFormats" "testsuite-runtime.at:45"
( $at_check_trace; POCL_DEVICES="pthread pthread" $abs_top_builddir/tests/runtime/test_clGetSupportedImageFormats
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_97
#AT_START_98
at_fn_group_banner 98 'testsuite-runtime.at:48' \
  "clCreateKernelsInProgram" "                       " 6
at_xfail=no
(
  $as_echo "98. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:50: \$abs_top_builddir/tests/runtime/test_clCreateKernelsInProgram "
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clCreateKernelsInProgram " "testsuite-runtime.at:50"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clCreateKernelsInProgram
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Hello
World
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_98
#AT_START_99
at_fn_group_banner 99 'testsuite-runtime.at:56' \
  "clCreateKernel" "                                 " 6
at_xfail=no
(
  $as_echo "99. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:58: \$abs_top_builddir/tests/runtime/test_clCreateKernel "
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clCreateKernel " "testsuite-runtime.at:58"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clCreateKernel
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_99
#AT_START_100
at_fn_group_banner 100 'testsuite-runtime.at:62' \
  "clGetKernelArgInfo" "                             " 6
at_xfail=no
      grep -q "#define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "100. $at_setup_line: testing $at_desc ..."
  $at_traceon



{ set +x
$as_echo "$at_srcdir/testsuite-runtime.at:65: \$abs_top_builddir/tests/runtime/test_clGetKernelArgInfo"
at_fn_check_prepare_dynamic "$abs_top_builddir/tests/runtime/test_clGetKernelArgInfo" "testsuite-runtime.at:65"
( $at_check_trace; $abs_top_builddir/tests/runtime/test_clGetKernelArgInfo
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-runtime.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_100
#AT_START_101
at_fn_group_banner 101 'testsuite-tce.at:4' \
  "A basic ttasim driver test" "                     " 7
at_xfail=no
(
  $as_echo "101. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-tce.at:6" >"$at_check_line_file"
(! grep -c "define TCE_AVAILABLE" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-tce.at:6"
{ set +x
$as_echo "$at_srcdir/testsuite-tce.at:7: make -s -C \$abs_top_builddir/tests/tce/ttasim run | egrep -v \"^make\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-tce.at:7"
( $at_check_trace; make -s -C $abs_top_builddir/tests/tce/ttasim run | egrep -v "^make"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PING23456.000000 2000001OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-tce.at:7"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_101
#AT_START_102
at_fn_group_banner 102 'testsuite-tce.at:12' \
  "Half-precision floats on ttasim (repl)" "         " 7
at_xfail=no
      grep -q "#define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "102. $at_setup_line: testing $at_desc ..."
  $at_traceon



$as_echo "testsuite-tce.at:15" >"$at_check_line_file"
(! grep -c "define TCE_AVAILABLE" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-tce.at:15"
{ set +x
$as_echo "$at_srcdir/testsuite-tce.at:16: POCL_WORK_GROUP_METHOD=repl make -s -C \$abs_top_builddir/tests/tce/fp16 run | egrep -v \"^make\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-tce.at:16"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make -s -C $abs_top_builddir/tests/tce/fp16 run | egrep -v "^make"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "through conversion: 42
2.500000
2.500000
2.500000
2.500000
2.500000
2.500000
2.500000
2.500000
32.000000
32.000000
32.000000
32.000000
32.000000
32.000000
32.000000
32.000000
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-tce.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_102
#AT_START_103
at_fn_group_banner 103 'testsuite-tce.at:37' \
  "Half-precision floats on ttasim (loopvec)" "      " 7
at_xfail=no
(
  $as_echo "103. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-tce.at:39" >"$at_check_line_file"
(! grep -c "define TCE_AVAILABLE" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-tce.at:39"
{ set +x
$as_echo "$at_srcdir/testsuite-tce.at:40: make -s -C \$abs_top_builddir/tests/tce/fp16 run | egrep -v \"^make\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-tce.at:40"
( $at_check_trace; make -s -C $abs_top_builddir/tests/tce/fp16 run | egrep -v "^make"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "through conversion: 42
2.500000
2.500000
2.500000
2.500000
2.500000
2.500000
2.500000
2.500000
32.000000
32.000000
32.000000
32.000000
32.000000
32.000000
32.000000
32.000000
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-tce.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_103
#AT_START_104
at_fn_group_banner 104 'testsuite-tce.at:61' \
  "A basic TCEMC test" "                             " 7
at_xfail=no
(
  $as_echo "104. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-tce.at:63" >"$at_check_line_file"
(! grep -c "define TCEMC_AVAILABLE" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-tce.at:63"
{ set +x
$as_echo "$at_srcdir/testsuite-tce.at:64: make -s -C \$abs_top_builddir/tests/tce/tcemc run | egrep -v \"^make\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-tce.at:64"
( $at_check_trace; make -s -C $abs_top_builddir/tests/tce/tcemc run | egrep -v "^make"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "PING23456.000000 2000001OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-tce.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_104
#AT_START_105
at_fn_group_banner 105 'testsuite-samples.at:8' \
  "Building the sources against pocl" "              " 8
at_xfail=no
(
  $as_echo "105. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:10" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:10"

cat >expout <<'_ATEOF'
Built target HelloWorld
Built target OpenCLInfo
Built target OpenCLConvolutionChap3
Built target HelloBinaryWorld
Built target SimpleBufferSubBuffer
Built target ImageFilter2D
Built target vecadd
Built target histogram
Built target Dijkstra
Built target spmv
_ATEOF

{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:23: sed -i 's/#include \"bmpLoader.hpp\"/\\/\\/#include \"bmpLoader.hpp/g' \\
\$abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_12/Sinewave/sinewave.cpp;
make -sC \$abs_top_builddir/examples/opencl-book-samples clean build 2>&1 | grep 'Built target' | cut -c8-"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:23"
( $at_check_trace; sed -i 's/#include "bmpLoader.hpp"/\/\/#include "bmpLoader.hpp/g' \
$abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_12/Sinewave/sinewave.cpp;
make -sC $abs_top_builddir/examples/opencl-book-samples clean build 2>&1 | grep 'Built target' | cut -c8-
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:23"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_105
#AT_START_106
at_fn_group_banner 106 'testsuite-samples.at:28' \
  "Run Chapter 2: Hello World" "                     " 8
at_xfail=no
(
  $as_echo "106. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:30" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:30"


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:32: cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_2/HelloWorld; ./HelloWorld | grep -v \"Could not create GPU context, trying CPU\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-samples.at:32"
( $at_check_trace; cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_2/HelloWorld; ./HelloWorld | grep -v "Could not create GPU context, trying CPU"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/opencl-book-samples/HelloWorld.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_106
#AT_START_107
at_fn_group_banner 107 'testsuite-samples.at:38' \
  "Run Chapter 3: OpenCLConvolution" "               " 8
at_xfail=no
(
  $as_echo "107. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:40" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:40"


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:42:
cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_3/OpenCLConvolution
ln -sf \$abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_3/OpenCLConvolution/Convolution.cl
./OpenCLConvolutionChap3
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:42"
( $at_check_trace;
cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_3/OpenCLConvolution
ln -sf $abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_3/OpenCLConvolution/Convolution.cl
./OpenCLConvolutionChap3

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/opencl-book-samples/OpenCLConvolutionChap3.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_107
#AT_START_108
at_fn_group_banner 108 'testsuite-samples.at:52' \
  "Run Chapter 6: HelloBinaryWorld" "                " 8
at_xfail=no
(
  $as_echo "108. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:54" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:54"

{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:55:
cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_6/HelloBinaryWorld
rm -f HelloWorld.cl.bin
./HelloBinaryWorld | grep -v \"Could not create GPU\"
./HelloBinaryWorld | grep -v \"Could not create GPU\"
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:55"
( $at_check_trace;
cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_6/HelloBinaryWorld
rm -f HelloWorld.cl.bin
./HelloBinaryWorld | grep -v "Could not create GPU"
./HelloBinaryWorld | grep -v "Could not create GPU"

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/opencl-book-samples/HelloBinaryWorld.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_108
#AT_START_109
at_fn_group_banner 109 'testsuite-samples.at:66' \
  "Run Chapter 7: SimpleBufferSubBuffer" "           " 8
at_xfail=no
(
  $as_echo "109. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:68" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:68"


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:70:
cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_7/SimpleBufferSubBuffer
./SimpleBufferSubBuffer --useMap | egrep -v \"_TYPE_GPU|16 17 18 19\"
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:70"
( $at_check_trace;
cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_7/SimpleBufferSubBuffer
./SimpleBufferSubBuffer --useMap | egrep -v "_TYPE_GPU|16 17 18 19"

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/opencl-book-samples/SimpleBufferSubBuffer.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_109
#AT_START_110
at_fn_group_banner 110 'testsuite-samples.at:79' \
  "Run Chapter 8: ImageFilter2D" "                   " 8
at_xfail=no
(
  $as_echo "110. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:81" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:81"

{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:82:
cd \${abs_top_srcdir}/examples/opencl-book-samples/checkout/src/Chapter_8/ImageFilter2D ;
cp \${abs_top_srcdir}/examples/opencl-book-samples/ImageFilter2D.cl ./
sed \"6s/float/constant float/\" -i ImageFilter2D.cl ;
sed '418cclFinish(commandQueue);' -i ImageFilter2D.cpp ;
cd \${abs_top_builddir}/examples/opencl-book-samples/build/src/Chapter_8/ImageFilter2D ;
make
"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-samples.at:82"
( $at_check_trace;
cd ${abs_top_srcdir}/examples/opencl-book-samples/checkout/src/Chapter_8/ImageFilter2D ;
cp ${abs_top_srcdir}/examples/opencl-book-samples/ImageFilter2D.cl ./
sed "6s/float/constant float/" -i ImageFilter2D.cl ;
sed '418cclFinish(commandQueue);' -i ImageFilter2D.cpp ;
cd ${abs_top_builddir}/examples/opencl-book-samples/build/src/Chapter_8/ImageFilter2D ;
make

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:91:
cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_8/ImageFilter2D
./ImageFilter2D \$abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_19/oclFlow/data/minicooper/frame10.png output.png
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:91"
( $at_check_trace;
cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_8/ImageFilter2D
./ImageFilter2D $abs_top_srcdir/examples/opencl-book-samples/checkout/src/Chapter_19/oclFlow/data/minicooper/frame10.png output.png

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Could not create GPU context, trying CPU...

Executed program succesfully.
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_110
#AT_START_111
at_fn_group_banner 111 'testsuite-samples.at:102' \
  "Run Chapter 12: VectorAdd (C++ bindings)" "       " 8
at_xfail=no
(
  $as_echo "111. $at_setup_line: testing $at_desc ..."
  $at_traceon



  $as_echo "testsuite-samples.at:104" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" samples "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-samples.at:104"


{ set +x
$as_echo "$at_srcdir/testsuite-samples.at:106:
cd \$abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_12/VectorAdd
./vecadd
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-samples.at:106"
( $at_check_trace;
cd $abs_top_builddir/examples/opencl-book-samples/build/src/Chapter_12/VectorAdd
./vecadd

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "`cat $abs_top_srcdir/examples/opencl-book-samples/VectorAdd.stdout`
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-samples.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_111
#AT_START_112
at_fn_group_banner 112 'testsuite-viennacl.at:17' \
  "fft" "                                            " 9
at_xfail=no
(
  $as_echo "112. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:17" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:17"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename examples/tutorial/fft).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:18: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/examples/tutorial/fft 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:18"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/examples/tutorial/fft 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:18"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_112
#AT_START_113
at_fn_group_banner 113 'testsuite-viennacl.at:21' \
  "custom-context" "                                 " 9
at_xfail=no
(
  $as_echo "113. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:21" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:21"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename examples/tutorial/custom-context).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:22: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/examples/tutorial/custom-context 2>&1 | sed -e '''1d;2d;3d;4d;8d;9d'"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:22"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/examples/tutorial/custom-context 2>&1 | sed -e '''1d;2d;3d;4d;8d;9d'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_113
#AT_START_114
at_fn_group_banner 114 'testsuite-viennacl.at:25' \
  "custom-kernels" "                                 " 9
at_xfail=no
(
  $as_echo "114. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:25" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:25"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename examples/tutorial/custom-kernels).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:26: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/examples/tutorial/custom-kernels 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:26"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/examples/tutorial/custom-kernels 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_114
#AT_START_115
at_fn_group_banner 115 'testsuite-viennacl.at:29' \
  "scheduler" "                                      " 9
at_xfail=no
(
  $as_echo "115. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:29" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:29"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename examples/tutorial/scheduler).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:30: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/examples/tutorial/scheduler 2>&1 | sed -e '''1d;2d'"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:30"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/examples/tutorial/scheduler 2>&1 | sed -e '''1d;2d'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_115
#AT_START_116
at_fn_group_banner 116 'testsuite-viennacl.at:39' \
  "bandwidth-reduction" "                            " 9
at_xfail=no
(
  $as_echo "116. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:39" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:39"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename examples/tutorial/bandwidth-reduction).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:40: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/examples/tutorial/bandwidth-reduction 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:40"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/examples/tutorial/bandwidth-reduction 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_116
#AT_START_117
at_fn_group_banner 117 'testsuite-viennacl.at:55' \
  "blas3_solve_double-test-opencl" "                 " 9
at_xfail=yes
(
  $as_echo "117. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:55" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:55"

#rouning/codegen/float mode errors:
#- * lower_tag:       passed! 5.16861e-07
#+ * lower_tag:       passed! 0


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/blas3_solve_double-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:60: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/blas3_solve_double-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:60"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/blas3_solve_double-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_117
#AT_START_118
at_fn_group_banner 118 'testsuite-viennacl.at:71' \
  "external_linkage-opencl" "                        " 9
at_xfail=no
(
  $as_echo "118. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:71" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:71"

# This is a buggy test as it relies on the destruction order
# of global objects. Wrong order results in a crash due to
# a dangling OpenCL object pointer.
$as_echo "testsuite-viennacl.at:75" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:75"

  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/external_linkage-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:76: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/external_linkage-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:76"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/external_linkage-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_118
#AT_START_119
at_fn_group_banner 119 'testsuite-viennacl.at:92' \
  "global_variables-test-opencl" "                   " 9
at_xfail=no
(
  $as_echo "119. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:92" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:92"

#This spinns on LLVM 3.6
$as_echo "testsuite-viennacl.at:94" >"$at_check_line_file"
(egrep -q "#define LLVM_3_6" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:94"

  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/global_variables-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:95: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/global_variables-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:95"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/global_variables-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_119
#AT_START_120
at_fn_group_banner 120 'testsuite-viennacl.at:98' \
  "iterators-test-opencl" "                          " 9
at_xfail=no
(
  $as_echo "120. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:98" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:98"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/iterators-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:99: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/iterators-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:99"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/iterators-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:99"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_120
#AT_START_121
at_fn_group_banner 121 'testsuite-viennacl.at:106' \
  "matrix_col_double-test-opencl long" "             " 9
at_xfail=no
(
  $as_echo "121. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:106" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:106"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/matrix_col_double-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:107: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_col_double-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:107"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_col_double-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_121
#AT_START_122
at_fn_group_banner 122 'testsuite-viennacl.at:112' \
  "matrix_col_float-test-opencl long" "              " 9
at_xfail=no
(
  $as_echo "122. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:112" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:112"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/matrix_col_float-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:113: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_col_float-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:113"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_col_float-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_122
#AT_START_123
at_fn_group_banner 123 'testsuite-viennacl.at:118' \
  "matrix_col_int-test-opencl" "                     " 9
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv && at_xfail=yes
(
  $as_echo "123. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:118" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:118"

#uninvestigated


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/matrix_col_int-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:121: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_col_int-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:121"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_col_int-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:121"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_123
#AT_START_124
at_fn_group_banner 124 'testsuite-viennacl.at:126' \
  "matrix_row_double-test-opencl long" "             " 9
at_xfail=no
(
  $as_echo "124. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:126" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:126"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/matrix_row_double-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:127: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_row_double-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:127"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_row_double-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:127"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_124
#AT_START_125
at_fn_group_banner 125 'testsuite-viennacl.at:132' \
  "matrix_row_float-test-opencl long" "              " 9
at_xfail=no
(
  $as_echo "125. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:132" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:132"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/matrix_row_float-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:133: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_row_float-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:133"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_row_float-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_125
#AT_START_126
at_fn_group_banner 126 'testsuite-viennacl.at:138' \
  "matrix_row_int-test-opencl" "                     " 9
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv && at_xfail=yes
(
  $as_echo "126. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:138" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:138"

#uninvestigated


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/matrix_row_int-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:141: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_row_int-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:141"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_row_int-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_126
#AT_START_127
at_fn_group_banner 127 'testsuite-viennacl.at:146' \
  "matrix_vector_int-test-opencl" "                  " 9
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv && at_xfail=yes
(
  $as_echo "127. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:146" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:146"

#uninvestigated


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/matrix_vector_int-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:149: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_vector_int-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:149"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_vector_int-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:149"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_127
#AT_START_128
at_fn_group_banner 128 'testsuite-viennacl.at:154' \
  "matrix_vector-test-opencl long" "                 " 9
at_xfail=no
(
  $as_echo "128. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:154" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:154"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/matrix_vector-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:155: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_vector-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:155"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/matrix_vector-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:155"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_128
#AT_START_129
at_fn_group_banner 129 'testsuite-viennacl.at:158' \
  "nmf-test-opencl" "                                " 9
at_xfail=yes
(
  $as_echo "129. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:158" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:158"

# ViennaCL borks with "Generator: Key not found in map"
#Note: uncomment a few other tests if fixing this


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/nmf-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:162: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/nmf-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:162"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/nmf-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_129
#AT_START_130
at_fn_group_banner 130 'testsuite-viennacl.at:166' \
  "scalar-test-opencl" "                             " 9
at_xfail=no
(
  $as_echo "130. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:166" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:166"


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/scalar-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:167: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/scalar-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:167"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/scalar-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_130
#AT_START_131
at_fn_group_banner 131 'testsuite-viennacl.at:170' \
  "structured-matrices-test-opencl" "                " 9
at_xfail=no
(
  $as_echo "131. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:170" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:170"

#float/double precision errors. Might not even be
#errors, the test seems to pass.
#TODO, investigate, skip result passing with sed
$as_echo "testsuite-viennacl.at:174" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:174"

  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/structured-matrices-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:175: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/structured-matrices-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:175"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/structured-matrices-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:175"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_131
#AT_START_132
at_fn_group_banner 132 'testsuite-viennacl.at:178' \
  "vector_double-test-opencl" "                      " 9
at_xfail=no
      egrep -q "#define LLVM_3_4" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "132. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-viennacl.at:178" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" viennacl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-viennacl.at:178"

#fails with "Could not find a dominating alternative variable"
#Note: uncomment a few other tests if fixing this


  cat $abs_top_srcdir/examples/ViennaCL/$(basename tests/vector_double-test-opencl).stdout > expout
  { set +x
$as_echo "$at_srcdir/testsuite-viennacl.at:182: \$abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/vector_double-test-opencl 2>&1 | sed -e ''"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-viennacl.at:182"
( $at_check_trace; $abs_top_builddir/examples/ViennaCL/ViennaCL-1.5.1/build/tests/vector_double-test-opencl 2>&1 | sed -e ''
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-viennacl.at:182"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_132
#AT_START_133
at_fn_group_banner 133 'testsuite-rodinia.at:19' \
  "backprop" "                                       " 10
at_xfail=no
(
  $as_echo "133. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:19" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:19"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:19" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:19"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:20: make build-backprop -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^backprop_ocl.cpp:\" "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:20"
( $at_check_trace; make build-backprop -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^backprop_ocl.cpp:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia backprop]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:21: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/backprop; ./run | grep ."
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:21"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/backprop; ./run | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Random number generator seed: 7
Input layer size : 65536
Starting training kernel
num_devices = 1
Performing GPU computation
Finish the training for one iteration
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_133
#AT_START_134
at_fn_group_banner 134 'testsuite-rodinia.at:31' \
  "bfs" "                                            " 10
at_xfail=no
(
  $as_echo "134. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:31" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:31"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:31" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:31"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:32: make build-bfs -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^CLHelper.h:|^In file included from bfs.cpp:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:32"
( $at_check_trace; make build-bfs -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^CLHelper.h:|^In file included from bfs.cpp:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia bfs]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }


# Test passes NVIDIA-specific parameters to clBuildProgram which is now
# detected as an unsupported parameter by pocl.
$as_echo "testsuite-rodinia.at:35" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:35"
{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:36: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/bfs; ./run 2>&1|grep -v \"incomplete\" | grep -v \"argument unused\" | grep ."
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:36"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/bfs; ./run 2>&1|grep -v "incomplete" | grep -v "argument unused" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Reading File
--cambine:passed:-)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:36"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_134
#AT_START_135
at_fn_group_banner 135 'testsuite-rodinia.at:42' \
  "cfd" "                                            " 10
at_xfail=no
(
  $as_echo "135. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:42" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:42"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:42" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:42"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:43: make build-cfd -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\" | egrep -v \"^euler3d.cpp:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:43"
( $at_check_trace; make build-cfd -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make" | egrep -v "^euler3d.cpp:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia cfd]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:44: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/cfd; ./run 2>&1| grep . | egrep -v \"incomplete|device.name\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:44"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/cfd; ./run 2>&1| grep . | egrep -v "incomplete|device.name"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "--cambine: nel=97046, nelr=97152
Starting...
Saving solution...
Saved solution...
Cleaning up...
Done...
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_135
#AT_START_136
at_fn_group_banner 136 'testsuite-rodinia.at:54' \
  "lud" "                                            " 10
at_xfail=no
(
  $as_echo "136. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:54" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:54"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:54" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:54"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:55: make build-lud -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^lud.cpp:|^../common/common.c:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:55"
( $at_check_trace; make build-lud -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^lud.cpp:|^../common/common.c:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia lud]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:56: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/lud/ocl; ./run | grep \"Time con\" | cut -c -18 | grep ."
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:56"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/lud/ocl; ./run | grep "Time con" | cut -c -18 | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Time consumed(ms):
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_136
#AT_START_137
at_fn_group_banner 137 'testsuite-rodinia.at:61' \
  "hotspot" "                                        " 10
at_xfail=no
(
  $as_echo "137. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:61" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:61"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:61" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:61"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:62: make build-hotspot -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:62"
( $at_check_trace; make build-hotspot -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia hotspot]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:63: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/hotspot; ./run | grep \"time\" | cut -d ' ' -f1 | grep ."
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:63"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/hotspot; ./run | grep "time" | cut -d ' ' -f1 | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Kernel
Total
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:63"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_137
#AT_START_138
at_fn_group_banner 138 'testsuite-rodinia.at:69' \
  "kmeans" "                                         " 10
at_xfail=no
(
  $as_echo "138. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:69" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:69"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:69" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:69"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:70: make build-kmeans -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^kmeans.cpp:|^read_input.c:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:70"
( $at_check_trace; make build-kmeans -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^kmeans.cpp:|^read_input.c:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia kmeans]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:71: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/kmeans; ./run | grep \"Number of\" | grep ."
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:71"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/kmeans; ./run | grep "Number of" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Number of objects: 494020
Number of features: 34
Number of Iteration: 1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_138
#AT_START_139
at_fn_group_banner 139 'testsuite-rodinia.at:78' \
  "lavaMD" "                                         " 10
at_xfail=no
(
  $as_echo "139. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:78" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:78"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:78" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:78"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:79: make build-lavaMD -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^./kernel/kernel_gpu_opencl_wrapper.c:|^rm:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:79"
( $at_check_trace; make build-lavaMD -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^./kernel/kernel_gpu_opencl_wrapper.c:|^rm:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia lavaMD]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }


# This test case uses struct kernel arguments which currently do not
# work correctly due to assuming the ABI maps variables 1:1 to kernel
# arguments and at least AMD64 seems to sometimes split the struct
# arguments to multiple scalar arguments. This (falsely) passes with
# the pthread device and crashes with the basic device.
$as_echo "testsuite-rodinia.at:85" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:85"
{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:86: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/lavaMD; ./run | grep \"Total time:\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-rodinia.at:86"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/lavaMD; ./run | grep "Total time:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Total time:
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_139
#AT_START_140
at_fn_group_banner 140 'testsuite-rodinia.at:91' \
  "pathfinder" "                                     " 10
at_xfail=no
(
  $as_echo "140. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:91" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:91"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:91" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:91"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:92: make build-pathfinder -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^OpenCL.cpp:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:92"
( $at_check_trace; make build-pathfinder -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^OpenCL.cpp:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia pathfinder]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }


# This started to fail at around 2014-12-03.
$as_echo "testsuite-rodinia.at:94" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:94"
{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:95: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/pathfinder; \\
POCL_MAX_WORK_GROUP_SIZE=2 ./run 2>&1 | grep -v \"pocl warning:\" ; \\
cat result.txt 2>&1 | egrep -v \"DEVICE_|PROFILE|VERSION|NAME|EXTENSIONS\" | grep ."
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-rodinia.at:95"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/pathfinder; \
POCL_MAX_WORK_GROUP_SIZE=2 ./run 2>&1 | grep -v "pocl warning:" ; \
cat result.txt 2>&1 | egrep -v "DEVICE_|PROFILE|VERSION|NAME|EXTENSIONS" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "$(cat $abs_top_srcdir/examples/Rodinia/pathfinder.stdout)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_140
#AT_START_141
at_fn_group_banner 141 'testsuite-rodinia.at:102' \
  "srad" "                                           " 10
at_xfail=no
(
  $as_echo "141. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-rodinia.at:102" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" rodinia "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:102"
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  $as_echo "testsuite-rodinia.at:102" >"$at_check_line_file"
(grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-rodinia.at:102"


  { set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:103: make build-srad -sC \${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v \"^make\"  | egrep -v \"^main.cpp:\"  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-rodinia.at:103"
( $at_check_trace; make build-srad -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make"  | egrep -v "^main.cpp:"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "  [Building Rodinia srad]
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-rodinia.at:104: cd \$abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/srad; \\
POCL_MAX_WORK_GROUP_SIZE=2 ./run 2>&1 | grep \"Total time\" | grep ."
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-rodinia.at:104"
( $at_check_trace; cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/srad; \
POCL_MAX_WORK_GROUP_SIZE=2 ./run 2>&1 | grep "Total time" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Total time:
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-rodinia.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_141
#AT_START_142
at_fn_group_banner 142 'testsuite-parboil.at:17' \
  "spmv" "                                           " 11
at_xfail=no
      grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "142. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:17" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:17"

#This fails when pocl has ICD enabled.


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:20: make build-spmv -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:20"
( $at_check_trace; make build-spmv -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:21: make run-spmv -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:21"
( $at_check_trace; make run-spmv -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_142
#AT_START_143
at_fn_group_banner 143 'testsuite-parboil.at:26' \
  "stencil" "                                        " 11
at_xfail=no
(
  $as_echo "143. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:26" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:26"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:27: make build-stencil -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:27"
( $at_check_trace; make build-stencil -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:27"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:28: make run-stencil -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:28"
( $at_check_trace; make run-stencil -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:28"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_143
#AT_START_144
at_fn_group_banner 144 'testsuite-parboil.at:33' \
  "tpacf" "                                          " 11
at_xfail=yes
(
  $as_echo "144. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:33" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:33"

# This probably is in infinite loop with wiloops.
$as_echo "testsuite-parboil.at:35" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:35"

  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:36: make build-tpacf -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:36"
( $at_check_trace; make build-tpacf -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:36"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:37: make run-tpacf -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:37"
( $at_check_trace; make run-tpacf -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

# Result verification error.

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_144
#AT_START_145
at_fn_group_banner 145 'testsuite-parboil.at:44' \
  "cutcp" "                                          " 11
at_xfail=no
(
  $as_echo "145. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:44" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:44"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:45: make build-cutcp -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:45"
( $at_check_trace; make build-cutcp -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:46: make run-cutcp -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:46"
( $at_check_trace; make run-cutcp -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_145
#AT_START_146
at_fn_group_banner 146 'testsuite-parboil.at:51' \
  "mri-gridding" "                                   " 11
at_xfail=no
(
  $as_echo "146. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:51" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:51"

# Takes forever to compile with the repl method.
# Also tries to create an illegal work group size and has potentially
# erroneous kernels?
$as_echo "testsuite-parboil.at:55" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:55"

  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:56: make build-mri-gridding -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:56"
( $at_check_trace; make build-mri-gridding -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:57: make run-mri-gridding -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:57"
( $at_check_trace; make run-mri-gridding -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

#AT_XFAIL_IF(true)
  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_146
#AT_START_147
at_fn_group_banner 147 'testsuite-parboil.at:63' \
  "sad" "                                            " 11
at_xfail=yes
(
  $as_echo "147. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:63" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:63"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:64: make build-sad -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:64"
( $at_check_trace; make build-sad -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:65: make run-sad -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:65"
( $at_check_trace; make run-sad -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

# Requires read_imageui

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_147
#AT_START_148
at_fn_group_banner 148 'testsuite-parboil.at:72' \
  "bfs" "                                            " 11
at_xfail=no
(
  $as_echo "148. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:72" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:72"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:73: make build-bfs -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:73"
( $at_check_trace; make build-bfs -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:74: make run-bfs -sC \$abs_top_builddir/examples/Parboil 2>&1 | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:74"
( $at_check_trace; make run-bfs -sC $abs_top_builddir/examples/Parboil 2>&1 | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

# LLVM 3.4's SROA crashes with this. Reported in http://llvm.org/bugs/show_bug.cgi?id=15907
# However, this is fixed with a TCE-patched version of 3.4, so let's just
# skip it for 3.4 for now.
$as_echo "testsuite-parboil.at:80" >"$at_check_line_file"
(grep -q "#define LLVM_3_4" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:80"
#AT_XFAIL_IF([grep -q "#define LLVM_3_4" $abs_top_builddir/config.h])
  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_148
#AT_START_149
at_fn_group_banner 149 'testsuite-parboil.at:84' \
  "histo" "                                          " 11
at_xfail=yes
(
  $as_echo "149. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:84" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:84"

# Illegal kernels with array parameters to functions.
$as_echo "testsuite-parboil.at:86" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:86"

  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:87: make build-histo -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:87"
( $at_check_trace; make build-histo -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:88: make run-histo -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:88"
( $at_check_trace; make run-histo -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_149
#AT_START_150
at_fn_group_banner 150 'testsuite-parboil.at:93' \
  "sgemm" "                                          " 11
at_xfail=no
(
  $as_echo "150. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:93" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:93"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:94: make build-sgemm -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:94"
( $at_check_trace; make build-sgemm -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:95: make run-sgemm -sC \$abs_top_builddir/examples/Parboil 2>&1| grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:95"
( $at_check_trace; make run-sgemm -sC $abs_top_builddir/examples/Parboil 2>&1| grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_150
#AT_START_151
at_fn_group_banner 151 'testsuite-parboil.at:100' \
  "mri-q" "                                          " 11
at_xfail=no
(
  $as_echo "151. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:100" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:100"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:101: make build-mri-q -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:101"
( $at_check_trace; make build-mri-q -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:101"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:102: make run-mri-q -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:102"
( $at_check_trace; make run-mri-q -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_151
#AT_START_152
at_fn_group_banner 152 'testsuite-parboil.at:107' \
  "lbm" "                                            " 11
at_xfail=no
(
  $as_echo "152. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-parboil.at:107" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" parboil "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-parboil.at:107"


  { set +x
$as_echo "$at_srcdir/testsuite-parboil.at:108: make build-lbm -sC \${abs_top_builddir}/examples/Parboil 2>&1 | grep \"Parboil parallel benchmark suite\" | grep .  "
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-parboil.at:108"
( $at_check_trace; make build-lbm -sC ${abs_top_builddir}/examples/Parboil 2>&1 | grep "Parboil parallel benchmark suite" | grep .
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Parboil parallel benchmark suite, version 0.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:108"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/testsuite-parboil.at:109: make run-lbm -sC \$abs_top_builddir/examples/Parboil | grep Pass"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-parboil.at:109"
( $at_check_trace; make run-lbm -sC $abs_top_builddir/examples/Parboil | grep Pass
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Pass
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-parboil.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

#AT_XFAIL_IF(true)
  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_152
#AT_START_153
at_fn_group_banner 153 'testsuite-amd.at:11' \
  "aesencryptdecrypt-repl" "                         " 12
at_xfail=no
(
  $as_echo "153. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:11" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:11"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:11" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:11"

#This fails, and on LLVM 3.3 it takes more than an hour (on modest PPC hardware) to detect it.
$as_echo "testsuite-amd.at:13" >"$at_check_line_file"
(grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:13"
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:14: POCL_WORK_GROUP_METHOD=repl make test_AESEncryptDecrypt -sC \$abs_top_builddir/examples/AMD | grep \"Encryption Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:14"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_AESEncryptDecrypt -sC $abs_top_builddir/examples/AMD | grep "Encryption Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Encryption Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:14"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_153
#AT_START_154
at_fn_group_banner 154 'testsuite-amd.at:19' \
  "aesencryptdecrypt-loops" "                        " 12
at_xfail=no
(
  $as_echo "154. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:19" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:19"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:19" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:19"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:20: POCL_WORK_GROUP_METHOD=loops make test_AESEncryptDecrypt -sC \$abs_top_builddir/examples/AMD | grep \"Encryption Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:20"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_AESEncryptDecrypt -sC $abs_top_builddir/examples/AMD | grep "Encryption Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Encryption Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_154
#AT_START_155
at_fn_group_banner 155 'testsuite-amd.at:25' \
  "atomiccounters" "                                 " 12
at_xfail=yes
(
  $as_echo "155. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:25" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:25"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:25" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:25"

# Expected Error: Device does not support cl_ext_atomic_counters_32 extension!

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:28: make test_AtomicCounters -sC \$abs_top_builddir/examples/AMD | grep \"Encryption Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:28"
( $at_check_trace; make test_AtomicCounters -sC $abs_top_builddir/examples/AMD | grep "Encryption Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Encryption Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:28"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_155
#AT_START_156
at_fn_group_banner 156 'testsuite-amd.at:33' \
  "bitonicsort" "                                    " 12
at_xfail=no
(
  $as_echo "156. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:33" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:33"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:33" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:33"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:34: make test_BitonicSort -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:34"
( $at_check_trace; make test_BitonicSort -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_156
#AT_START_157
at_fn_group_banner 157 'testsuite-amd.at:39' \
  "binarysearch" "                                   " 12
at_xfail=no
(
  $as_echo "157. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:39" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:39"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:39" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:39"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:40: make test_BinarySearch -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:40"
( $at_check_trace; make test_BinarySearch -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_157
#AT_START_158
at_fn_group_banner 158 'testsuite-amd.at:45' \
  "binomialoption-repl" "                            " 12
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&
             grep -q "define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "158. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:45" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:45"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:45" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:45"


{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:48: POCL_WORK_GROUP_METHOD=repl make test_BinomialOption -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:48"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_BinomialOption -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_158
#AT_START_159
at_fn_group_banner 159 'testsuite-amd.at:53' \
  "binomialoption-loops" "                           " 12
at_xfail=no
(
  $as_echo "159. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:53" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:53"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:53" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:53"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:54: POCL_WORK_GROUP_METHOD=loops make test_BinomialOption -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:54"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_BinomialOption -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_159
#AT_START_160
at_fn_group_banner 160 'testsuite-amd.at:59' \
  "blackscholes" "                                   " 12
at_xfail=no
(
  $as_echo "160. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:59" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:59"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:59" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:59"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:60: make test_BlackScholes -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:60"
( $at_check_trace; make test_BlackScholes -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_160
#AT_START_161
at_fn_group_banner 161 'testsuite-amd.at:65' \
  "blackscholesdp" "                                 " 12
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv &&
             (grep -q "define LLVM_3_2" $abs_top_builddir/config.h ||
              grep -q "define LLVM_3_3" $abs_top_builddir/config.h ) && at_xfail=yes
(
  $as_echo "161. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:65" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:65"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:65" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:65"


#this causes assert on LLVM 3.1
$as_echo "testsuite-amd.at:68" >"$at_check_line_file"
( grep "#define LLVM_3_1" $abs_top_builddir/config.h ) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:68"


{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:73: make test_BlackScholesDP -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:73"
( $at_check_trace; make test_BlackScholesDP -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_161
#AT_START_162
at_fn_group_banner 162 'testsuite-amd.at:78' \
  "boxfilter" "                                      " 12
at_xfail=no
(
  $as_echo "162. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:78" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:78"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:78" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:78"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:79: make test_BoxFilter -sC \$abs_top_builddir/examples/AMD | egrep \"Passed|failed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:79"
( $at_check_trace; make test_BoxFilter -sC $abs_top_builddir/examples/AMD | egrep "Passed|failed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
Verifying results...Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_162
#AT_START_163
at_fn_group_banner 163 'testsuite-amd.at:85' \
  "dct" "                                            " 12
at_xfail=no
(
  $as_echo "163. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:85" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:85"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:85" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:85"

#uninvestigated miscompilation. regression from 0.8
$as_echo "testsuite-amd.at:87" >"$at_check_line_file"
(grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:87"
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:88: make test_DCT -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:88"
( $at_check_trace; make test_DCT -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_163
#AT_START_164
at_fn_group_banner 164 'testsuite-amd.at:93' \
  "devicefission" "                                  " 12
at_xfail=no
(
  $as_echo "164. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:93" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:93"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:93" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:93"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:94: make test_DeviceFission -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:94"
( $at_check_trace; make test_DeviceFission -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_164
#AT_START_165
at_fn_group_banner 165 'testsuite-amd.at:99' \
  "dwthaar1d" "                                      " 12
at_xfail=no
      egrep -q "#define LLVM_3_4" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "165. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:99" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:99"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:99" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:99"

# 3.5 introduced the noduplicate attribute which, when
# used with barrier(), fixes this.

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:103: make test_DwtHaar1D -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:103"
( $at_check_trace; make test_DwtHaar1D -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:103"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_165
#AT_START_166
at_fn_group_banner 166 'testsuite-amd.at:108' \
  "fastwalshtransform" "                             " 12
at_xfail=no
(
  $as_echo "166. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:108" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:108"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:108" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:108"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:109: make test_FastWalshTransform -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:109"
( $at_check_trace; make test_FastWalshTransform -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_166
#AT_START_167
at_fn_group_banner 167 'testsuite-amd.at:114' \
  "floydwarshall" "                                  " 12
at_xfail=no
(
  $as_echo "167. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:114" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:114"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:114" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:114"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:115: make test_FloydWarshall -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:115"
( $at_check_trace; make test_FloydWarshall -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:115"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_167
#AT_START_168
at_fn_group_banner 168 'testsuite-amd.at:120' \
  "fluidsimulation2d" "                              " 12
at_xfail=yes
(
  $as_echo "168. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:120" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:120"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:120" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:120"

# error: can't convert between vector values of different size ('uint' (aka 'unsigned int') and 'int8')
# It should be a legal implicit conversion according to 6.3 Operators. Some other error makes it
# break with Intel OCL also.


{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:126: make test_FluidSimulation2D -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:126"
( $at_check_trace; make test_FluidSimulation2D -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:126"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_168
#AT_START_169
at_fn_group_banner 169 'testsuite-amd.at:131' \
  "helloworld" "                                     " 12
at_xfail=no
(
  $as_echo "169. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:131" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:131"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:131" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:131"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:132: make test_HelloWorld -sC \$abs_top_builddir/examples/AMD | egrep \"GdkknVnqkc|HelloWorld\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:132"
( $at_check_trace; make test_HelloWorld -sC $abs_top_builddir/examples/AMD | egrep "GdkknVnqkc|HelloWorld"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "GdkknVnqkc
HelloWorld
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_169
#AT_START_170
at_fn_group_banner 170 'testsuite-amd.at:138' \
  "histogram-repl" "                                 " 12
at_xfail=no
(
  $as_echo "170. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:138" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:138"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:138" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:138"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:139: POCL_WORK_GROUP_METHOD=repl make test_Histogram -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:139"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_Histogram -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:139"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_170
#AT_START_171
at_fn_group_banner 171 'testsuite-amd.at:144' \
  "histogram-loops" "                                " 12
at_xfail=no
(
  $as_echo "171. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:144" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:144"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:144" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:144"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:145: POCL_WORK_GROUP_METHOD=loops make test_Histogram -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:145"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_Histogram -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:145"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_171
#AT_START_172
at_fn_group_banner 172 'testsuite-amd.at:150' \
  "imageoverlap" "                                   " 12
at_xfail=no
(
  $as_echo "172. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:150" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:150"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:150" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:150"

# doen't work because of image indexing, sdk 2.9 version works
$as_echo "testsuite-amd.at:152" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:152"
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:153: make test_ImageOverlap -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:153"
( $at_check_trace; make test_ImageOverlap -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Verifying result - Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_172
#AT_START_173
at_fn_group_banner 173 'testsuite-amd.at:158' \
  "ludecomposition" "                                " 12
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv &&
             (grep -q "define LLVM_3_2" $abs_top_builddir/config.h ||
              grep -q "define LLVM_3_3" $abs_top_builddir/config.h ) && at_xfail=yes
(
  $as_echo "173. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:158" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:158"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:158" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:158"


#test uses doubles


{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:165: make test_LUDecomposition -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:165"
( $at_check_trace; make test_LUDecomposition -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_173
#AT_START_174
at_fn_group_banner 174 'testsuite-amd.at:170' \
  "mandelbrot" "                                     " 12
at_xfail=no
(
  $as_echo "174. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:170" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:170"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:170" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:170"

$as_echo "testsuite-amd.at:171" >"$at_check_line_file"
( grep "undef HAVE_GLEW" $abs_top_builddir/config.h ) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:171"
# undefined symbol: _Z7std_fmaDv4_fS_S_ with VML
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:173: make test_Mandelbrot -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:173"
( $at_check_trace; make test_Mandelbrot -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:173"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_174
#AT_START_175
at_fn_group_banner 175 'testsuite-amd.at:178' \
  "matrixmul" "                                      " 12
at_xfail=no
(
  $as_echo "175. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:178" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:178"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:178" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:178"

#uninvestigated miscompilation. regression from 0.8
$as_echo "testsuite-amd.at:180" >"$at_check_line_file"
(grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:180"
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:181: make test_MatrixMultiplication -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:181"
( $at_check_trace; make test_MatrixMultiplication -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:181"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_175
#AT_START_176
at_fn_group_banner 176 'testsuite-amd.at:186' \
  "matrixmulimage" "                                 " 12
at_xfail=no
(
  $as_echo "176. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:186" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:186"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:186" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:186"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:187: make test_MatrixMulImage -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:187"
( $at_check_trace; make test_MatrixMulImage -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:187"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_176
#AT_START_177
at_fn_group_banner 177 'testsuite-amd.at:192' \
  "matrixtranspose" "                                " 12
at_xfail=no
(
  $as_echo "177. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:192" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:192"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:192" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:192"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:193: make test_MatrixTranspose -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:193"
( $at_check_trace; make test_MatrixTranspose -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:193"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_177
#AT_START_178
at_fn_group_banner 178 'testsuite-amd.at:198' \
  "memorymodel-repl" "                               " 12
at_xfail=no
(
  $as_echo "178. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:198" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:198"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:198" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:198"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:199: POCL_WORK_GROUP_METHOD=repl make test_MemoryModel -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:199"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_MemoryModel -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:199"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_178
#AT_START_179
at_fn_group_banner 179 'testsuite-amd.at:204' \
  "memorymodel-loops" "                              " 12
at_xfail=no
(
  $as_echo "179. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:204" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:204"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:204" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:204"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:205: POCL_WORK_GROUP_METHOD=loops make test_MemoryModel -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:205"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_MemoryModel -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:205"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_179
#AT_START_180
at_fn_group_banner 180 'testsuite-amd.at:210' \
  "montecarloasian" "                                " 12
at_xfail=no
      grep -q "#define LLVM_3_5" $abs_top_builddir/config.h && at_xfail=yes
      grep -q "#define LLVM_3_6" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "180. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:210" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:210"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:210" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:210"

# kernel compilation fails due to
# error: can't convert between vector values of different size ('float4' and 'int')
# It should be a legal implicit conversion according to 6.3 Operators. Works also with Intel OCL
# Seems this is a regression in LLVM 3.5


{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:217: make test_MonteCarloAsian -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:217"
( $at_check_trace; make test_MonteCarloAsian -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:217"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_180
#AT_START_181
at_fn_group_banner 181 'testsuite-amd.at:222' \
  "montecarloasiandp" "                              " 12
at_xfail=yes
(
  $as_echo "181. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:222" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:222"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:222" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:222"


# error: can't convert between vector values of different size ('double4' and 'int')
# It should be a legal implicit conversion according to 6.3 Operators. Works also with Intel OCL

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:227: make test_MonteCarloAsianDP -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:227"
( $at_check_trace; make test_MonteCarloAsianDP -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_181
#AT_START_182
at_fn_group_banner 182 'testsuite-amd.at:232' \
  "nbody" "                                          " 12
at_xfail=no
(
  $as_echo "182. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:232" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:232"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:232" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:232"

$as_echo "testsuite-amd.at:233" >"$at_check_line_file"
( grep "undef HAVE_GLEW" $abs_top_builddir/config.h ) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:233"
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:234: make test_NBody -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:234"
( $at_check_trace; make test_NBody -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:234"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_182
#AT_START_183
at_fn_group_banner 183 'testsuite-amd.at:239' \
  "prefixsum" "                                      " 12
at_xfail=no
(
  $as_echo "183. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:239" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:239"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:239" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:239"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:240: make test_PrefixSum -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:240"
( $at_check_trace; make test_PrefixSum -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:240"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_183
#AT_START_184
at_fn_group_banner 184 'testsuite-amd.at:245' \
  "quasirandomsequence" "                            " 12
at_xfail=no
(
  $as_echo "184. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:245" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:245"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:245" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:245"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:246: make test_QuasiRandomSequence -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:246"
( $at_check_trace; make test_QuasiRandomSequence -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:246"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_184
#AT_START_185
at_fn_group_banner 185 'testsuite-amd.at:251' \
  "radixsort" "                                      " 12
at_xfail=no
(
  $as_echo "185. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:251" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:251"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:251" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:251"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:252: make test_RadixSort -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:252"
( $at_check_trace; make test_RadixSort -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:252"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_185
#AT_START_186
at_fn_group_banner 186 'testsuite-amd.at:257' \
  "recursivegaussian" "                              " 12
at_xfail=no
(
  $as_echo "186. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:257" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:257"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:257" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:257"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:258: make test_RecursiveGaussian -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:258"
( $at_check_trace; make test_RecursiveGaussian -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:258"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_186
#AT_START_187
at_fn_group_banner 187 'testsuite-amd.at:263' \
  "reduction" "                                      " 12
at_xfail=no
(
  $as_echo "187. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:263" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:263"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:263" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:263"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:264: make test_Reduction -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:264"
( $at_check_trace; make test_Reduction -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:264"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_187
#AT_START_188
at_fn_group_banner 188 'testsuite-amd.at:269' \
  "scanlargearrays" "                                " 12
at_xfail=no
(
  $as_echo "188. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:269" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:269"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:269" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:269"

# Fails with vectorization. With wiloops and no unrolling, the vectorization won't apply.
{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:271: make test_ScanLargeArrays -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:271"
( $at_check_trace; make test_ScanLargeArrays -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:271"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_188
#AT_START_189
at_fn_group_banner 189 'testsuite-amd.at:276' \
  "simpleconvolution" "                              " 12
at_xfail=no
(
  $as_echo "189. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:276" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:276"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:276" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:276"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:277: make test_SimpleConvolution -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:277"
( $at_check_trace; make test_SimpleConvolution -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:277"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_189
#AT_START_190
at_fn_group_banner 190 'testsuite-amd.at:282' \
  "simpleimage" "                                    " 12
at_xfail=no
(
  $as_echo "190. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:282" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:282"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:282" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:282"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:283: make test_SimpleImage -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:283"
( $at_check_trace; make test_SimpleImage -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Verifying 2D copy result - Passed!
Verifying 3D copy result - Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:283"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_190
#AT_START_191
at_fn_group_banner 191 'testsuite-amd.at:289' \
  "sobelfilter" "                                    " 12
at_xfail=no
(
  $as_echo "191. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:289" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:289"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:289" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:289"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:290: make test_SobelFilter -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:290"
( $at_check_trace; make test_SobelFilter -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:290"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_191
#AT_START_192
at_fn_group_banner 192 'testsuite-amd.at:295' \
  "template" "                                       " 12
at_xfail=no
(
  $as_echo "192. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:295" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:295"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:295" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:295"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:296: make test_Template -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:296"
( $at_check_trace; make test_Template -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:296"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_192
#AT_START_193
at_fn_group_banner 193 'testsuite-amd.at:301' \
  "templatec" "                                      " 12
at_xfail=no
(
  $as_echo "193. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:301" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:301"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:301" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:301"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:302: make test_TemplateC -sC \$abs_top_builddir/examples/AMD | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:302"
( $at_check_trace; make test_TemplateC -sC $abs_top_builddir/examples/AMD | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:302"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_193
#AT_START_194
at_fn_group_banner 194 'testsuite-amd.at:307' \
  "transferoverlap" "                                " 12
at_xfail=yes
(
  $as_echo "194. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:307" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:307"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:307" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:307"

# Expected Error: Device does not support cl_khr_local_int32_base_atomics extension!

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:310: make test_TransferOverlap -sC \$abs_top_builddir/examples/AMD | grep \"Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:310"
( $at_check_trace; make test_TransferOverlap -sC $abs_top_builddir/examples/AMD | grep "Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:310"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_194
#AT_START_195
at_fn_group_banner 195 'testsuite-amd.at:315' \
  "urng" "                                           " 12
at_xfail=no
(
  $as_echo "195. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amd.at:315" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amd "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:315"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amd.at:315" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amd.at:315"

{ set +x
$as_echo "$at_srcdir/testsuite-amd.at:316: make test_URNG -sC \$abs_top_builddir/examples/AMD | grep Passed | cut -c -7"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amd.at:316"
( $at_check_trace; make test_URNG -sC $abs_top_builddir/examples/AMD | grep Passed | cut -c -7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amd.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_195
#AT_START_196
at_fn_group_banner 196 'testsuite-amdsdk2_9.at:11' \
  "asyncdatatransfer" "                              " 13
at_xfail=no
(
  $as_echo "196. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:11" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:11"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:11" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:11"

# needs asynch properties implemented
$as_echo "testsuite-amdsdk2_9.at:13" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:13"
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:14: make test_AsyncDataTransfer -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep \"Passed\" | sed -e 's/^ \\t*//'"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:14"
( $at_check_trace; make test_AsyncDataTransfer -sC $abs_top_builddir/examples/AMDSDK2.9 | grep "Passed" | sed -e 's/^ \t*//'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "SyncKernel verification  : Passed!
AsyncKernel verification : Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:14"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_196
#AT_START_197
at_fn_group_banner 197 'testsuite-amdsdk2_9.at:20' \
  "atomiccounters" "                                 " 13
at_xfail=yes
(
  $as_echo "197. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:20" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:20"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:20" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:20"

# Expected Error: Device does not support cl_ext_atomic_counters_32 extension!

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:23: make test_AtomicCounters -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep \"Encryption Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:23"
( $at_check_trace; make test_AtomicCounters -sC $abs_top_builddir/examples/AMDSDK2.9 | grep "Encryption Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Encryption Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:23"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_197
#AT_START_198
at_fn_group_banner 198 'testsuite-amdsdk2_9.at:28' \
  "basicdebug" "                                     " 13
at_xfail=no
(
  $as_echo "198. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:28" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:28"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:28" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:28"

# This tests debugging features by executing a kernel that writes
# out of bounds of a local array. No point testing it here as the
# result should be undefined (basic device crashes, pthread device
# silently passes). It passes if the kernel's local array size is
# increased so there is no out of bounds error.
$as_echo "testsuite-amdsdk2_9.at:34" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:34"
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:35: make test_BasicDebug -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:35"
( $at_check_trace; make test_BasicDebug -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_198
#AT_START_199
at_fn_group_banner 199 'testsuite-amdsdk2_9.at:40' \
  "binarysearch" "                                   " 13
at_xfail=no
(
  $as_echo "199. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:40" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:40"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:40" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:40"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:41: make test_BinarySearch -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:41"
( $at_check_trace; make test_BinarySearch -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_199
#AT_START_200
at_fn_group_banner 200 'testsuite-amdsdk2_9.at:46' \
  "binomialoption-repl" "                            " 13
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&
             grep -q "define LLVM_3_2" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "200. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:46" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:46"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:46" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:46"


{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:49: POCL_WORK_GROUP_METHOD=repl make test_BinomialOption -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:49"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_BinomialOption -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_200
#AT_START_201
at_fn_group_banner 201 'testsuite-amdsdk2_9.at:54' \
  "binomialoption-loops" "                           " 13
at_xfail=no
(
  $as_echo "201. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:54" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:54"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:54" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:54"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:55: POCL_WORK_GROUP_METHOD=loops make test_BinomialOption -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:55"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_BinomialOption -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_201
#AT_START_202
at_fn_group_banner 202 'testsuite-amdsdk2_9.at:60' \
  "binomialoptionmultigpu" "                         " 13
at_xfail=no
(
  $as_echo "202. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:60" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:60"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:60" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:60"

$as_echo "testsuite-amdsdk2_9.at:61" >"$at_check_line_file"
( ! test -e $abs_top_builddir/examples/AMDSDK2.9/AMD-APP-SDK-v2.9-RC-lnx64/samples/opencl/cl/BinomialOptionMultiGPU/bin/x86_64/Release/BinomialOptionMultiGPU) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:61"
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:62: make test_BinomialOptionMultiGPU -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:62"
( $at_check_trace; make test_BinomialOptionMultiGPU -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_202
#AT_START_203
at_fn_group_banner 203 'testsuite-amdsdk2_9.at:67' \
  "bitonicsort" "                                    " 13
at_xfail=no
(
  $as_echo "203. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:67" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:67"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:67" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:67"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:68: make test_BitonicSort -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:68"
( $at_check_trace; make test_BitonicSort -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_203
#AT_START_204
at_fn_group_banner 204 'testsuite-amdsdk2_9.at:73' \
  "blackscholes" "                                   " 13
at_xfail=no
(
  $as_echo "204. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:73" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:73"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:73" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:73"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:74: make test_BlackScholes -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:74"
( $at_check_trace; make test_BlackScholes -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_204
#AT_START_205
at_fn_group_banner 205 'testsuite-amdsdk2_9.at:79' \
  "blackscholesdp" "                                 " 13
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv && at_xfail=yes
(
  $as_echo "205. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:79" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:79"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:79" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:79"


#this causes assert on LLVM 3.1
$as_echo "testsuite-amdsdk2_9.at:82" >"$at_check_line_file"
( grep "#define LLVM_3_1" $abs_top_builddir/config.h ) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:82"


{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:85: make test_BlackScholesDP -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:85"
( $at_check_trace; make test_BlackScholesDP -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_205
#AT_START_206
at_fn_group_banner 206 'testsuite-amdsdk2_9.at:90' \
  "boxfilter" "                                      " 13
at_xfail=no
(
  $as_echo "206. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:90" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:90"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:90" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:90"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:91: make test_BoxFilter -sC \$abs_top_builddir/examples/AMDSDK2.9 | egrep \"Passed|failed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:91"
( $at_check_trace; make test_BoxFilter -sC $abs_top_builddir/examples/AMDSDK2.9 | egrep "Passed|failed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
Verifying results...Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_206
#AT_START_207
at_fn_group_banner 207 'testsuite-amdsdk2_9.at:97' \
  "boxfilterGL" "                                    " 13
at_xfail=yes
(
  $as_echo "207. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:97" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:97"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:97" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:97"

# doesnt work

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:100: make test_BoxFilterGL -sC \$abs_top_builddir/examples/AMDSDK2.9 | egrep \"Passed|failed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:100"
( $at_check_trace; make test_BoxFilterGL -sC $abs_top_builddir/examples/AMDSDK2.9 | egrep "Passed|failed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
Verifying results...Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_207
#AT_START_208
at_fn_group_banner 208 'testsuite-amdsdk2_9.at:106' \
  "bufferbandwidth" "                                " 13
at_xfail=no
(
  $as_echo "208. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:106" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:106"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:106" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:106"

# Device does not support cl_khr_local_int32_base_atomics extension!
# AT_XFAIL_IF(true)
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:109: make test_BufferBandwidth -sC \$abs_top_builddir/examples/AMDSDK2.9 | egrep \"Passed|failed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:109"
( $at_check_trace; make test_BufferBandwidth -sC $abs_top_builddir/examples/AMDSDK2.9 | egrep "Passed|failed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo " Verification Passed!
 Verification Passed!
Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_208
#AT_START_209
at_fn_group_banner 209 'testsuite-amdsdk2_9.at:116' \
  "bufferImageInterop" "                             " 13
at_xfail=yes
(
  $as_echo "209. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:116" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:116"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:116" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:116"

# Error: Selected device doesn't support Buffer-Image

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:119: make test_BufferImageInterop -sC \$abs_top_builddir/examples/AMDSDK2.9 | egrep \"Passed|failed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:119"
( $at_check_trace; make test_BufferImageInterop -sC $abs_top_builddir/examples/AMDSDK2.9 | egrep "Passed|failed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_209
#AT_START_210
at_fn_group_banner 210 'testsuite-amdsdk2_9.at:125' \
  "concurrentkernel" "                               " 13
at_xfail=no
(
  $as_echo "210. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:125" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:125"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:125" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:125"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:126: make test_ConcurrentKernel -sC \$abs_top_builddir/examples/AMDSDK2.9 | egrep \"Passed|failed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:126"
( $at_check_trace; make test_ConcurrentKernel -sC $abs_top_builddir/examples/AMDSDK2.9 | egrep "Passed|failed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo " Sequential Kernel verification : Passed!
 Concurrent Kernel verification : Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:126"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_210
#AT_START_211
at_fn_group_banner 211 'testsuite-amdsdk2_9.at:132' \
  "constantbandwidth" "                              " 13
at_xfail=no
(
  $as_echo "211. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:132" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:132"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:132" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:132"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:133: make test_ConstantBandwidth -sC \$abs_top_builddir/examples/AMDSDK2.9 | egrep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:133"
( $at_check_trace; make test_ConstantBandwidth -sC $abs_top_builddir/examples/AMDSDK2.9 | egrep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
Passed!
Passed!
Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_211
#AT_START_212
at_fn_group_banner 212 'testsuite-amdsdk2_9.at:141' \
  "cpluspluswrapper" "                               " 13
at_xfail=no
(
  $as_echo "212. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:141" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:141"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:141" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:141"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:142: make test_CplusplusWrapper -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:142"
( $at_check_trace; make test_CplusplusWrapper -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_212
#AT_START_213
at_fn_group_banner 213 'testsuite-amdsdk2_9.at:147' \
  "dct" "                                            " 13
at_xfail=no
(
  $as_echo "213. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:147" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:147"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:147" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:147"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:148: make test_DCT -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:148"
( $at_check_trace; make test_DCT -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:148"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_213
#AT_START_214
at_fn_group_banner 214 'testsuite-amdsdk2_9.at:153' \
  "devicefission" "                                  " 13
at_xfail=no
(
  $as_echo "214. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:153" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:153"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:153" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:153"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:154: make test_DeviceFission -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:154"
( $at_check_trace; make test_DeviceFission -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_214
#AT_START_215
at_fn_group_banner 215 'testsuite-amdsdk2_9.at:159' \
  "devicefission11ext" "                             " 13
at_xfail=yes
(
  $as_echo "215. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:159" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:159"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:159" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:159"

# Expected Error: Device does not support cl_ext_device_fission extension!

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:162: make test_DeviceFission11Ext -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:162"
( $at_check_trace; make test_DeviceFission11Ext -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:162"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_215
#AT_START_216
at_fn_group_banner 216 'testsuite-amdsdk2_9.at:167' \
  "dwthaar1d" "                                      " 13
at_xfail=no
      egrep -q "#define LLVM_3_4" $abs_top_builddir/config.h && at_xfail=yes
(
  $as_echo "216. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:167" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:167"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:167" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:167"

# 3.5 introduced the noduplicate attribute which, when
# used with barrier(), fixes this.

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:171: make test_DwtHaar1D -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:171"
( $at_check_trace; make test_DwtHaar1D -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:171"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_216
#AT_START_217
at_fn_group_banner 217 'testsuite-amdsdk2_9.at:176' \
  "dwthaar1dcppkernel" "                             " 13
at_xfail=yes
(
  $as_echo "217. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:176" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:176"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:176" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:176"

# Error: clBuildProgram failed. Error code : CL_INVALID_BUILD_OPTIONS (-x clc++)

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:179: make test_DwtHaar1DCPPKernel -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:179"
( $at_check_trace; make test_DwtHaar1DCPPKernel -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:179"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_217
#AT_START_218
at_fn_group_banner 218 'testsuite-amdsdk2_9.at:184' \
  "eigenvalue" "                                     " 13
at_xfail=yes
(
  $as_echo "218. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:184" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:184"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:184" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:184"

# Error: clBuildProgram failed. Error code : CL_INVALID_BUILD_OPTIONS (-x clc++)

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:187: make test_EigenValue -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:187"
( $at_check_trace; make test_EigenValue -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:187"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_218
#AT_START_219
at_fn_group_banner 219 'testsuite-amdsdk2_9.at:192' \
  "fastwalshtransform" "                             " 13
at_xfail=no
(
  $as_echo "219. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:192" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:192"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:192" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:192"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:193: make test_FastWalshTransform -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:193"
( $at_check_trace; make test_FastWalshTransform -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:193"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_219
#AT_START_220
at_fn_group_banner 220 'testsuite-amdsdk2_9.at:198' \
  "floydwarshall" "                                  " 13
at_xfail=no
(
  $as_echo "220. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:198" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:198"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:198" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:198"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:199: make test_FloydWarshall -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:199"
( $at_check_trace; make test_FloydWarshall -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:199"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_220
#AT_START_221
at_fn_group_banner 221 'testsuite-amdsdk2_9.at:204' \
  "fft" "                                            " 13
at_xfail=no
(
  $as_echo "221. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:204" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:204"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:204" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:204"

# Build parameter clc++ not supported
$as_echo "testsuite-amdsdk2_9.at:206" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:206"
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:207: make test_FFT -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:207"
( $at_check_trace; make test_FFT -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:207"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_221
#AT_START_222
at_fn_group_banner 222 'testsuite-amdsdk2_9.at:212' \
  "fluidsimulation2d" "                              " 13
at_xfail=yes
(
  $as_echo "222. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:212" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:212"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:212" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:212"

# error: can't convert between vector values of different size ('uint' (aka 'unsigned int') and 'int8')
# It should be a legal implicit conversion according to 6.3 Operators. Some other error makes it
# break with Intel OCL also.


{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:218: make test_FluidSimulation2D -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:218"
( $at_check_trace; make test_FluidSimulation2D -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:218"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_222
#AT_START_223
at_fn_group_banner 223 'testsuite-amdsdk2_9.at:223' \
  "gaussiannoise" "                                  " 13
at_xfail=no
(
  $as_echo "223. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:223" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:223"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:223" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:223"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:224: make test_GaussianNoise -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed | sed 's/ //g'"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:224"
( $at_check_trace; make test_GaussianNoise -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed | sed 's/ //g'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_223
#AT_START_224
at_fn_group_banner 224 'testsuite-amdsdk2_9.at:229' \
  "gaussiannoisegl" "                                " 13
at_xfail=no
(
  $as_echo "224. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:229" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:229"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:229" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:229"

#doesnt work
$as_echo "testsuite-amdsdk2_9.at:231" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:231"
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:232: make test_GaussianNoiseGL -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:232"
( $at_check_trace; make test_GaussianNoiseGL -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:232"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_224
#AT_START_225
at_fn_group_banner 225 'testsuite-amdsdk2_9.at:244' \
  "hdrtonemapping" "                                 " 13
at_xfail=no
(
  $as_echo "225. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:244" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:244"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:244" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:244"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:245: make test_HDRToneMapping -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:245"
( $at_check_trace; make test_HDRToneMapping -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:245"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_225
#AT_START_226
at_fn_group_banner 226 'testsuite-amdsdk2_9.at:250' \
  "helloworld" "                                     " 13
at_xfail=no
(
  $as_echo "226. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:250" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:250"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:250" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:250"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:251: make test_HelloWorld -sC \$abs_top_builddir/examples/AMDSDK2.9 | egrep \"GdkknVnqkc|HelloWorld\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:251"
( $at_check_trace; make test_HelloWorld -sC $abs_top_builddir/examples/AMDSDK2.9 | egrep "GdkknVnqkc|HelloWorld"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "GdkknVnqkc
HelloWorld
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:251"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_226
#AT_START_227
at_fn_group_banner 227 'testsuite-amdsdk2_9.at:257' \
  "histogram-repl" "                                 " 13
at_xfail=no
(
  $as_echo "227. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:257" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:257"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:257" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:257"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:258: POCL_WORK_GROUP_METHOD=repl make test_Histogram -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:258"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_Histogram -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:258"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_227
#AT_START_228
at_fn_group_banner 228 'testsuite-amdsdk2_9.at:263' \
  "histogram-loops" "                                " 13
at_xfail=no
(
  $as_echo "228. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:263" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:263"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:263" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:263"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:264: POCL_WORK_GROUP_METHOD=loops make test_Histogram -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:264"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_Histogram -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:264"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_228
#AT_START_229
at_fn_group_banner 229 'testsuite-amdsdk2_9.at:269' \
  "histogramatomic" "                                " 13
at_xfail=no
(
  $as_echo "229. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:269" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:269"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:269" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:269"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:270: make test_HistogramAtomics -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:270"
( $at_check_trace; make test_HistogramAtomics -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_229
#AT_START_230
at_fn_group_banner 230 'testsuite-amdsdk2_9.at:275' \
  "imagebandwidth" "                                 " 13
at_xfail=no
(
  $as_echo "230. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:275" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:275"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:275" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:275"

# AT_SKIP_IF(true)
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:277: make test_ImageBandwidth -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:277"
( $at_check_trace; make test_ImageBandwidth -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:277"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_230
#AT_START_231
at_fn_group_banner 231 'testsuite-amdsdk2_9.at:283' \
  "imageoverlap" "                                   " 13
at_xfail=no
(
  $as_echo "231. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:283" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:283"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:283" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:283"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:284: make test_ImageOverlap -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:284"
( $at_check_trace; make test_ImageOverlap -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Verifying result - Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_231
#AT_START_232
at_fn_group_banner 232 'testsuite-amdsdk2_9.at:289' \
  "introstatickcppkernel" "                          " 13
at_xfail=yes
(
  $as_echo "232. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:289" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:289"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:289" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:289"

# Error: clBuildProgram failed. Error code : CL_INVALID_BUILD_OPTIONS (-x clc++)

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:292: make test_IntroStaticCPPKernel -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:292"
( $at_check_trace; make test_IntroStaticCPPKernel -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Verifying result - Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:292"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_232
#AT_START_233
at_fn_group_banner 233 'testsuite-amdsdk2_9.at:297' \
  "kernellauch" "                                    " 13
at_xfail=no
(
  $as_echo "233. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:297" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:297"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:297" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:297"

# Device does not support cl_khr_local_int32_base_atomics extension!
# works anyway
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:300: make test_KernelLaunch -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed!"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:300"
( $at_check_trace; make test_KernelLaunch -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed!
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:300"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_233
#AT_START_234
at_fn_group_banner 234 'testsuite-amdsdk2_9.at:305' \
  "kmeansautoclustering" "                           " 13
at_xfail=yes
(
  $as_echo "234. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:305" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:305"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:305" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:305"

# doesn't find opencl library for some reason

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:308: make test_KmeansAutoclustering -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:308"
( $at_check_trace; make test_KmeansAutoclustering -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:308"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_234
#AT_START_235
at_fn_group_banner 235 'testsuite-amdsdk2_9.at:314' \
  "ldsbandwidth" "                                   " 13
at_xfail=no
(
  $as_echo "235. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:314" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:314"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:314" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:314"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:315: make test_LDSBandwidth -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:315"
( $at_check_trace; make test_LDSBandwidth -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
Passed!
Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_235
#AT_START_236
at_fn_group_banner 236 'testsuite-amdsdk2_9.at:322' \
  "ludecomposition" "                                " 13
at_xfail=no
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc && at_xfail=yes
      grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv && at_xfail=yes
(
  $as_echo "236. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:322" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:322"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:322" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:322"


#test uses doubles


{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:327: make test_LUDecomposition -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:327"
( $at_check_trace; make test_LUDecomposition -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:327"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_236
#AT_START_237
at_fn_group_banner 237 'testsuite-amdsdk2_9.at:332' \
  "mandelbrot" "                                     " 13
at_xfail=no
(
  $as_echo "237. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:332" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:332"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:332" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:332"

$as_echo "testsuite-amdsdk2_9.at:333" >"$at_check_line_file"
( grep "undef HAVE_GLEW" $abs_top_builddir/config.h ) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:333"
$as_echo "testsuite-amdsdk2_9.at:334" >"$at_check_line_file"
( ! test -e $abs_top_builddir/examples/AMDSDK2.9/AMD-APP-SDK-v2.9-RC-lnx64/samples/opencl/cl/Mandelbrot/bin/x86_64/Release/Mandelbrot) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:334"
# undefined symbol: _Z7std_fmaDv4_fS_S_ with VML
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:336: make test_Mandelbrot -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:336"
( $at_check_trace; make test_Mandelbrot -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:336"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_237
#AT_START_238
at_fn_group_banner 238 'testsuite-amdsdk2_9.at:341' \
  "matrixmuldouble" "                                " 13
at_xfail=no
(
  $as_echo "238. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:341" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:341"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:341" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:341"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:342: make test_MatrixMulDouble -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:342"
( $at_check_trace; make test_MatrixMulDouble -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:342"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_238
#AT_START_239
at_fn_group_banner 239 'testsuite-amdsdk2_9.at:347' \
  "matrixmulimage" "                                 " 13
at_xfail=no
(
  $as_echo "239. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:347" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:347"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:347" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:347"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:348: make test_MatrixMulImage -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:348"
( $at_check_trace; make test_MatrixMulImage -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:348"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_239
#AT_START_240
at_fn_group_banner 240 'testsuite-amdsdk2_9.at:353' \
  "matrixmultiplication" "                           " 13
at_xfail=no
(
  $as_echo "240. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:353" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:353"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:353" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:353"

# pocl error: encountered unimplemented part of the OpenCL specs in clCreateImage2D.c:119
#AT_XFAIL_IF(true)
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:356: make test_MatrixMultiplication -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:356"
( $at_check_trace; make test_MatrixMultiplication -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:356"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_240
#AT_START_241
at_fn_group_banner 241 'testsuite-amdsdk2_9.at:361' \
  "matrixtranspose" "                                " 13
at_xfail=no
(
  $as_echo "241. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:361" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:361"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:361" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:361"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:362: make test_MatrixTranspose -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:362"
( $at_check_trace; make test_MatrixTranspose -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:362"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_241
#AT_START_242
at_fn_group_banner 242 'testsuite-amdsdk2_9.at:367' \
  "memorymodel-repl" "                               " 13
at_xfail=no
(
  $as_echo "242. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:367" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:367"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:367" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:367"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:368: POCL_WORK_GROUP_METHOD=repl make test_MemoryModel -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:368"
( $at_check_trace; POCL_WORK_GROUP_METHOD=repl make test_MemoryModel -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:368"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_242
#AT_START_243
at_fn_group_banner 243 'testsuite-amdsdk2_9.at:373' \
  "memorymodel-loops" "                              " 13
at_xfail=no
(
  $as_echo "243. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:373" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:373"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:373" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:373"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:374: POCL_WORK_GROUP_METHOD=loops make test_MemoryModel -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:374"
( $at_check_trace; POCL_WORK_GROUP_METHOD=loops make test_MemoryModel -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:374"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_243
#AT_START_244
at_fn_group_banner 244 'testsuite-amdsdk2_9.at:379' \
  "memoryoptimizations" "                            " 13
at_xfail=no
(
  $as_echo "244. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:379" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:379"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:379" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:379"

#Device does not support global_int32_base_atomics
#AT_SKIP_IF(true)
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:382: make test_MemoryOptimizations -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:382"
( $at_check_trace; make test_MemoryOptimizations -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:382"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_244
#AT_START_245
at_fn_group_banner 245 'testsuite-amdsdk2_9.at:409' \
  "merzennetwister" "                                " 13
at_xfail=no
(
  $as_echo "245. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:409" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:409"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:409" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:409"

#Build parameter clc++ is not supported
$as_echo "testsuite-amdsdk2_9.at:411" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:411"
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:412: make test_MersenneTwister -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:412"
( $at_check_trace; make test_MersenneTwister -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:412"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_245
#AT_START_246
at_fn_group_banner 246 'testsuite-amdsdk2_9.at:417' \
  "montecarloasian" "                                " 13
at_xfail=yes
(
  $as_echo "246. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:417" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:417"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:417" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:417"

# kernel compilation fails due to
# error: can't convert between vector values of different size ('float4' and 'int')
# It should be a legal implicit conversion according to 6.3 Operators. Works also with Intel OCL

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:422: make test_MonteCarloAsian -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:422"
( $at_check_trace; make test_MonteCarloAsian -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:422"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_246
#AT_START_247
at_fn_group_banner 247 'testsuite-amdsdk2_9.at:427' \
  "montecarloasiandp" "                              " 13
at_xfail=yes
(
  $as_echo "247. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:427" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:427"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:427" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:427"


# error: can't convert between vector values of different size ('double4' and 'int')
# It should be a legal implicit conversion according to 6.3 Operators. Works also with Intel OCL

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:432: make test_MonteCarloAsianDP -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:432"
( $at_check_trace; make test_MonteCarloAsianDP -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:432"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_247
#AT_START_248
at_fn_group_banner 248 'testsuite-amdsdk2_9.at:437' \
  "montecarloasianmultigpu" "                        " 13
at_xfail=yes
(
  $as_echo "248. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:437" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:437"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:437" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:437"

# kernel compilation fails due to
# error: can't convert between vector values of different size ('float4' and 'int')
# It should be a legal implicit conversion according to 6.3 Operators. Works also with Intel OCL

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:442: make test_MonteCarloAsianMultiGPU -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:442"
( $at_check_trace; make test_MonteCarloAsianMultiGPU -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:442"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_248
#AT_START_249
at_fn_group_banner 249 'testsuite-amdsdk2_9.at:447' \
  "nbody" "                                          " 13
at_xfail=no
(
  $as_echo "249. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:447" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:447"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:447" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:447"

$as_echo "testsuite-amdsdk2_9.at:448" >"$at_check_line_file"
( grep "undef HAVE_GLEW" $abs_top_builddir/config.h ) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:448"
$as_echo "testsuite-amdsdk2_9.at:449" >"$at_check_line_file"
( ! test -e $abs_top_builddir/examples/AMDSDK2.9/AMD-APP-SDK-v2.9-RC-lnx64/samples/opencl/cl/NBody/bin/x86_64/Release/NBody) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:449"
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:450: make test_NBody -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:450"
( $at_check_trace; make test_NBody -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:450"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_249
#AT_START_250
at_fn_group_banner 250 'testsuite-amdsdk2_9.at:455' \
  "prefixsum" "                                      " 13
at_xfail=no
(
  $as_echo "250. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:455" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:455"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:455" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:455"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:456: make test_PrefixSum -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:456"
( $at_check_trace; make test_PrefixSum -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:456"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_250
#AT_START_251
at_fn_group_banner 251 'testsuite-amdsdk2_9.at:461' \
  "quasirandomsequence" "                            " 13
at_xfail=no
(
  $as_echo "251. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:461" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:461"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:461" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:461"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:462: make test_QuasiRandomSequence -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:462"
( $at_check_trace; make test_QuasiRandomSequence -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:462"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_251
#AT_START_252
at_fn_group_banner 252 'testsuite-amdsdk2_9.at:467' \
  "radixsort" "                                      " 13
at_xfail=no
(
  $as_echo "252. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:467" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:467"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:467" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:467"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:468: make test_RadixSort -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:468"
( $at_check_trace; make test_RadixSort -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:468"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_252
#AT_START_253
at_fn_group_banner 253 'testsuite-amdsdk2_9.at:473' \
  "recursivegaussian" "                              " 13
at_xfail=no
(
  $as_echo "253. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:473" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:473"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:473" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:473"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:474: make test_RecursiveGaussian -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:474"
( $at_check_trace; make test_RecursiveGaussian -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:474"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_253
#AT_START_254
at_fn_group_banner 254 'testsuite-amdsdk2_9.at:479' \
  "reduction" "                                      " 13
at_xfail=no
(
  $as_echo "254. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:479" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:479"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:479" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:479"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:480: make test_Reduction -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:480"
( $at_check_trace; make test_Reduction -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:480"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_254
#AT_START_255
at_fn_group_banner 255 'testsuite-amdsdk2_9.at:485' \
  "scanlargearrays" "                                " 13
at_xfail=no
(
  $as_echo "255. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:485" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:485"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:485" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:485"

# Fails with vectorization. With wiloops and no unrolling, the vectorization won't apply.
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:487: make test_ScanLargeArrays -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:487"
( $at_check_trace; make test_ScanLargeArrays -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:487"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_255
#AT_START_256
at_fn_group_banner 256 'testsuite-amdsdk2_9.at:492' \
  "simpleconvolution" "                              " 13
at_xfail=no
(
  $as_echo "256. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:492" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:492"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:492" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:492"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:493: make test_SimpleConvolution -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:493"
( $at_check_trace; make test_SimpleConvolution -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:493"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_256
#AT_START_257
at_fn_group_banner 257 'testsuite-amdsdk2_9.at:498' \
  "simplegl" "                                       " 13
at_xfail=yes
(
  $as_echo "257. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:498" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:498"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:498" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:498"

# doesn't find opecl library

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:501: make test_SimpleGL -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:501"
( $at_check_trace; make test_SimpleGL -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:501"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_257
#AT_START_258
at_fn_group_banner 258 'testsuite-amdsdk2_9.at:506' \
  "simpleimage" "                                    " 13
at_xfail=no
(
  $as_echo "258. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:506" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:506"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:506" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:506"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:507: make test_SimpleImage -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:507"
( $at_check_trace; make test_SimpleImage -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Verifying 2D copy result - Passed!
Verifying 3D copy result - Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:507"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_258
#AT_START_259
at_fn_group_banner 259 'testsuite-amdsdk2_9.at:513' \
  "soaversusaos" "                                   " 13
at_xfail=no
(
  $as_echo "259. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:513" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:513"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:513" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:513"

#Build Options are : -x clc++ -D num1=4096 -D num2=4096
#Error: clBuildProgram failed. Error code : CL_INVALID_BUILD_OPTIONS
$as_echo "testsuite-amdsdk2_9.at:516" >"$at_check_line_file"
at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:516"
{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:517: make test_SoAversusAoS -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:517"
( $at_check_trace; make test_SoAversusAoS -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:517"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_259
#AT_START_260
at_fn_group_banner 260 'testsuite-amdsdk2_9.at:522' \
  "sobelfilter" "                                    " 13
at_xfail=no
(
  $as_echo "260. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:522" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:522"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:522" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:522"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:523: make test_SobelFilter -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:523"
( $at_check_trace; make test_SobelFilter -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:523"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_260
#AT_START_261
at_fn_group_banner 261 'testsuite-amdsdk2_9.at:528' \
  "sobelfilterimage" "                               " 13
at_xfail=yes
(
  $as_echo "261. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:528" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:528"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:528" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:528"

# segfault

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:531: make test_SobelFilterImage -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:531"
( $at_check_trace; make test_SobelFilterImage -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:531"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_261
#AT_START_262
at_fn_group_banner 262 'testsuite-amdsdk2_9.at:536' \
  "stringsearch" "                                   " 13
at_xfail=no
(
  $as_echo "262. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:536" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:536"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:536" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:536"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:537: make test_StringSearch -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:537"
( $at_check_trace; make test_StringSearch -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:537"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_262
#AT_START_263
at_fn_group_banner 263 'testsuite-amdsdk2_9.at:543' \
  "template" "                                       " 13
at_xfail=no
(
  $as_echo "263. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:543" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:543"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:543" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:543"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:544: make test_Template -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:544"
( $at_check_trace; make test_Template -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:544"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_263
#AT_START_264
at_fn_group_banner 264 'testsuite-amdsdk2_9.at:549' \
  "transferoverlap" "                                " 13
at_xfail=no
(
  $as_echo "264. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:549" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:549"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:549" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:549"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:550: make test_TransferOverlap -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep \"Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:550"
( $at_check_trace; make test_TransferOverlap -sC $abs_top_builddir/examples/AMDSDK2.9 | grep "Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:550"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_264
#AT_START_265
at_fn_group_banner 265 'testsuite-amdsdk2_9.at:555' \
  "transferoverlapcpp" "                             " 13
at_xfail=yes
(
  $as_echo "265. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:555" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:555"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:555" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:555"

# Expected Error: Device does not support cl_khr_local_int32_base_atomics extension! and segfault

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:558: make test_TransferOverlapCPP -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep \"Passed\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:558"
( $at_check_trace; make test_TransferOverlapCPP -sC $abs_top_builddir/examples/AMDSDK2.9 | grep "Passed"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:558"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_265
#AT_START_266
at_fn_group_banner 266 'testsuite-amdsdk2_9.at:563' \
  "unsharpmask" "                                    " 13
at_xfail=yes
(
  $as_echo "266. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:563" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:563"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:563" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:563"

# doesn't find opencl library

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:566: make test_UnsharpMask -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:566"
( $at_check_trace; make test_UnsharpMask -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:566"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_266
#AT_START_267
at_fn_group_banner 267 'testsuite-amdsdk2_9.at:571' \
  "urng" "                                           " 13
at_xfail=no
(
  $as_echo "267. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:571" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:571"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:571" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:571"

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:572: make test_URNG -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed | cut -c -7"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:572"
( $at_check_trace; make test_URNG -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed | cut -c -7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:572"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_267
#AT_START_268
at_fn_group_banner 268 'testsuite-amdsdk2_9.at:577' \
  "urngnoisegl" "                                    " 13
at_xfail=yes
(
  $as_echo "268. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-amdsdk2_9.at:577" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" amdsdk2_9 "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:577"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-amdsdk2_9.at:577" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-amdsdk2_9.at:577"

# Error: clGetPlatformIDs failed. Error code : CL_PLATFORM_NOT_FOUND_KHR

{ set +x
$as_echo "$at_srcdir/testsuite-amdsdk2_9.at:580: make test_URNGNoiseGL -sC \$abs_top_builddir/examples/AMDSDK2.9 | grep Passed | cut -c -7"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-amdsdk2_9.at:580"
( $at_check_trace; make test_URNGNoiseGL -sC $abs_top_builddir/examples/AMDSDK2.9 | grep Passed | cut -c -7
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Passed!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-amdsdk2_9.at:580"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_268
#AT_START_269
at_fn_group_banner 269 'testsuite-vexcl.at:10' \
  "fft" "                                            " 14
at_xfail=no
(
  $as_echo "269. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:10" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:10"

# Warnings ignored:
# clang: warning: argument unused during compilation: '-cl-mad-enable'
# clang: warning: argument unused during compilation: '-cl-fast-relaxed-math'
{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:14: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./fft 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:14"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./fft 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:14"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_269
#AT_START_270
at_fn_group_banner 270 'testsuite-vexcl.at:19' \
  "generator" "                                      " 14
at_xfail=no
(
  $as_echo "270. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:19" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:19"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:20: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./generator 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:20"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./generator 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_270
#AT_START_271
at_fn_group_banner 271 'testsuite-vexcl.at:25' \
  "multiple_objects" "                               " 14
at_xfail=no
(
  $as_echo "271. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:25" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:25"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:26: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./multiple_objects 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:26"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./multiple_objects 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_271
#AT_START_272
at_fn_group_banner 272 'testsuite-vexcl.at:31' \
  "multivector_arithmetics" "                        " 14
at_xfail=no
(
  $as_echo "272. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:31" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:31"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:32: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./multivector_arithmetics 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:32"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./multivector_arithmetics 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_272
#AT_START_273
at_fn_group_banner 273 'testsuite-vexcl.at:37' \
  "multivector_create" "                             " 14
at_xfail=no
(
  $as_echo "273. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:37" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:37"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:38: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./multivector_create 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:38"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./multivector_create 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_273
#AT_START_274
at_fn_group_banner 274 'testsuite-vexcl.at:43' \
  "random" "                                         " 14
at_xfail=no
(
  $as_echo "274. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:43" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:43"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:44: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./random 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:44"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./random 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_274
#AT_START_275
at_fn_group_banner 275 'testsuite-vexcl.at:49' \
  "spmv" "                                           " 14
at_xfail=no
(
  $as_echo "275. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:49" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:49"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:50: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./spmv 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:50"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./spmv 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_275
#AT_START_276
at_fn_group_banner 276 'testsuite-vexcl.at:55' \
  "stencil" "                                        " 14
at_xfail=yes
(
  $as_echo "276. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:55" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:55"

# Crash.

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:58: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./stencil 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:58"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./stencil 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_276
#AT_START_277
at_fn_group_banner 277 'testsuite-vexcl.at:63' \
  "vector_arithmetics" "                             " 14
at_xfail=no
(
  $as_echo "277. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:63" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:63"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:64: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_arithmetics 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:64"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_arithmetics 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_277
#AT_START_278
at_fn_group_banner 278 'testsuite-vexcl.at:69' \
  "vector_copy" "                                    " 14
at_xfail=no
(
  $as_echo "278. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:69" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:69"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:70: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_copy 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:70"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_copy 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_278
#AT_START_279
at_fn_group_banner 279 'testsuite-vexcl.at:75' \
  "vector_create" "                                  " 14
at_xfail=no
(
  $as_echo "279. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-vexcl.at:75" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" vexcl "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-vexcl.at:75"

{ set +x
$as_echo "$at_srcdir/testsuite-vexcl.at:76: cd \$abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_create 2>&1 | grep \"No errors\""
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-vexcl.at:76"
( $at_check_trace; cd $abs_top_builddir/examples/VexCL/vexcl/tests ; ./vector_create 2>&1 | grep "No errors"
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo >>"$at_stdout"; $as_echo "*** No errors detected
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-vexcl.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_279
#AT_START_280
at_fn_group_banner 280 'testsuite-halide.at:11' \
  "tutorial12" "                                     " 15
at_xfail=no
(
  $as_echo "280. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-halide.at:11" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" Halide "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-halide.at:11"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-halide.at:11" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-halide.at:11"

{ set +x
$as_echo "$at_srcdir/testsuite-halide.at:12: cd \$abs_top_builddir/examples/Halide/Halide/tutorial ;
LD_LIBRARY_PATH=\${LD_LIBRARY_PATH}:../bin HL_TARGET=opencl ../bin/tutorial_lesson_12_using_the_gpu | cut -d ' ' -f 2"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-halide.at:12"
( $at_check_trace; cd $abs_top_builddir/examples/Halide/Halide/tutorial ;
LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:../bin HL_TARGET=opencl ../bin/tutorial_lesson_12_using_the_gpu | cut -d ' ' -f 2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "performance
milliseconds
performance
milliseconds
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-halide.at:12"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_280
#AT_START_281
at_fn_group_banner 281 'testsuite-halide.at:21' \
  "bilateral_grid" "                                 " 15
at_xfail=no
(
  $as_echo "281. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-halide.at:21" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" Halide "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-halide.at:21"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-halide.at:21" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-halide.at:21"

{ set +x
$as_echo "$at_srcdir/testsuite-halide.at:22: cd \$abs_top_builddir/examples/Halide/Halide/apps/bilateral_grid ;
LD_LIBRARY_PATH=\${LD_LIBRARY_PATH}:../bin HL_TARGET=opencl ./filter ../images/gray.png out.png 0.1"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-halide.at:22"
( $at_check_trace; cd $abs_top_builddir/examples/Halide/Halide/apps/bilateral_grid ;
LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:../bin HL_TARGET=opencl ./filter ../images/gray.png out.png 0.1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-halide.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_281
#AT_START_282
at_fn_group_banner 282 'testsuite-halide.at:26' \
  "interpolate" "                                    " 15
at_xfail=no
(
  $as_echo "282. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-halide.at:26" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" Halide "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-halide.at:26"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-halide.at:26" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-halide.at:26"

{ set +x
$as_echo "$at_srcdir/testsuite-halide.at:27: cd \$abs_top_builddir/examples/Halide/Halide/apps/interpolate ;
LD_LIBRARY_PATH=\${LD_LIBRARY_PATH}:../bin HL_TARGET=opencl ./interpolate ../images/rgba.png out.png"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-halide.at:27"
( $at_check_trace; cd $abs_top_builddir/examples/Halide/Halide/apps/interpolate ;
LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:../bin HL_TARGET=opencl ./interpolate ../images/rgba.png out.png
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-halide.at:27"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_282
#AT_START_283
at_fn_group_banner 283 'testsuite-halide.at:31' \
  "local_laplacian" "                                " 15
at_xfail=no
(
  $as_echo "283. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-halide.at:31" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" Halide "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-halide.at:31"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-halide.at:31" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-halide.at:31"

{ set +x
$as_echo "$at_srcdir/testsuite-halide.at:32: cd \$abs_top_builddir/examples/Halide/Halide/apps/local_laplacian ;
LD_LIBRARY_PATH=\${LD_LIBRARY_PATH}:../bin HL_TARGET=opencl ./process ../images/rgb.png 8 1 1 out.png"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "testsuite-halide.at:32"
( $at_check_trace; cd $abs_top_builddir/examples/Halide/Halide/apps/local_laplacian ;
LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:../bin HL_TARGET=opencl ./process ../images/rgb.png 8 1 1 out.png
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo stdout:; cat "$at_stdout"
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-halide.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_283
#AT_START_284
at_fn_group_banner 284 'testsuite-cloverleaf.at:11' \
  "cloverleaf" "                                     " 16
at_xfail=no
(
  $as_echo "284. $at_setup_line: testing $at_desc ..."
  $at_traceon


  $as_echo "testsuite-cloverleaf.at:11" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" CloverLeaf "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-cloverleaf.at:11"
  # AMD APP SDK tests require ICD loader with
  $as_echo "testsuite-cloverleaf.at:11" >"$at_check_line_file"
(! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-cloverleaf.at:11"

{ set +x
$as_echo "$at_srcdir/testsuite-cloverleaf.at:12: cd \$abs_top_builddir/examples/CloverLeaf/CloverLeaf_OpenCL ;
./clover_leaf 2>&1 |grep First | cut -c-6
"
at_fn_check_prepare_notrace 'an embedded newline' "testsuite-cloverleaf.at:12"
( $at_check_trace; cd $abs_top_builddir/examples/CloverLeaf/CloverLeaf_OpenCL ;
./clover_leaf 2>&1 |grep First | cut -c-6

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo " First
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-cloverleaf.at:12"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_284
#AT_START_285
at_fn_group_banner 285 'testsuite-piglit.at:3' \
  "Piglit testsuite with LLVM 3.4" "                 " 17
at_xfail=no
(
  $as_echo "285. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-piglit.at:5" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" piglit "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-piglit.at:5"
$as_echo "testsuite-piglit.at:6" >"$at_check_line_file"
(! grep -q "#define LLVM_3_4" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-piglit.at:6"
#AT_CHECK([make -s -C $abs_top_builddir/examples/piglit/piglit], ignore, ignore, ignore)
{ set +x
$as_echo "$at_srcdir/testsuite-piglit.at:8: cd \$abs_top_builddir/examples/piglit/; piglit/piglit-run.py -v piglit/tests/all_cl.tests piglit/results/all 2>&1 | grep \"pass ::\" > result"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-piglit.at:8"
( $at_check_trace; cd $abs_top_builddir/examples/piglit/; piglit/piglit-run.py -v piglit/tests/all_cl.tests piglit/results/all 2>&1 | grep "pass ::" > result
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/testsuite-piglit.at:8"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/testsuite-piglit.at:9: cd \$abs_top_builddir/examples/piglit/; LC_ALL=C sort result -o sorted_result; LC_ALL=C comm -23 sorted_ref sorted_result"
at_fn_check_prepare_dynamic "cd $abs_top_builddir/examples/piglit/; LC_ALL=C sort result -o sorted_result; LC_ALL=C comm -23 sorted_ref sorted_result" "testsuite-piglit.at:9"
( $at_check_trace; cd $abs_top_builddir/examples/piglit/; LC_ALL=C sort result -o sorted_result; LC_ALL=C comm -23 sorted_ref sorted_result
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-piglit.at:9"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_285
#AT_START_286
at_fn_group_banner 286 'testsuite-piglit.at:12' \
  "Piglit testsuite with LLVM 3.5" "                 " 17
at_xfail=no
(
  $as_echo "286. $at_setup_line: testing $at_desc ..."
  $at_traceon


$as_echo "testsuite-piglit.at:14" >"$at_check_line_file"
(case " $POAT_TESTSUITES " in #(
  *" piglit "*) :
    false ;; #(
  *) :
    : ;;
esac) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-piglit.at:14"
$as_echo "testsuite-piglit.at:15" >"$at_check_line_file"
(! grep -q "#define LLVM_3_5" $abs_top_builddir/config.h) \
  && at_fn_check_skip 77 "$at_srcdir/testsuite-piglit.at:15"
#AT_CHECK([make -s -C $abs_top_builddir/examples/piglit/piglit], ignore, ignore, ignore)
{ set +x
$as_echo "$at_srcdir/testsuite-piglit.at:17: cd \$abs_top_builddir/examples/piglit/; piglit/piglit-run.py -v piglit/tests/all_cl.tests piglit/results/all 2>&1 | grep \"pass ::\" > result"
at_fn_check_prepare_notrace 'a shell pipeline' "testsuite-piglit.at:17"
( $at_check_trace; cd $abs_top_builddir/examples/piglit/; piglit/piglit-run.py -v piglit/tests/all_cl.tests piglit/results/all 2>&1 | grep "pass ::" > result
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo stderr:; cat "$at_stderr"
echo stdout:; cat "$at_stdout"
at_fn_check_skip $at_status "$at_srcdir/testsuite-piglit.at:17"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/testsuite-piglit.at:18: cd \$abs_top_builddir/examples/piglit/; LC_ALL=C sort result -o sorted_result; LC_ALL=C comm -23 sorted_ref_llvm_3.5 sorted_result"
at_fn_check_prepare_dynamic "cd $abs_top_builddir/examples/piglit/; LC_ALL=C sort result -o sorted_result; LC_ALL=C comm -23 sorted_ref_llvm_3.5 sorted_result" "testsuite-piglit.at:18"
( $at_check_trace; cd $abs_top_builddir/examples/piglit/; LC_ALL=C sort result -o sorted_result; LC_ALL=C comm -23 sorted_ref_llvm_3.5 sorted_result
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/testsuite-piglit.at:18"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_286
